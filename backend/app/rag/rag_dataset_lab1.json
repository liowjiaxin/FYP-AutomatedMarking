[
  {
    "student_id": "20701680",
    "code": "\n/* --- 20701680_Florence Tinevimbo Chigwida/Test1.c --- */\n#include <stdio.h>\r\nint main () {\r\n\r\nint i,j ;\r\nint rows;\r\nint columns ;\r\nprintf(\"Please enter the number of rows\");\r\nscanf(\"%d\", &rows);\r\n\r\nprintf(\"Please enter the number of columns\");\r\nscanf(\"%d\",& columns);\r\n\r\nfor ( int i = 0 ; i < rows ; i ++){\r\n    for ( int j = 0 ;  j < columns ; j++){\r\n    printf (\" * \") ;\r\n    }\r\nprintf(\"\\n\") ;\r\n}\r\n\r\nreturn 0 ;\r\n }\r\n\r\n\n/* --- 20701680_Florence Tinevimbo Chigwida/test2.c --- */\n#include <stdio.h>\r\nint main(){\r\n\r\n    \r\n    int num1, num2, num3 ;\r\n    int sum , product , smallest , largest ;\r\n    float average ;\r\n   \r\n    printf(\"Enter three integer separated by space: \");\r\n    scanf(\"%d\\t%d\\t%d\",& num1,&num2,&num3);\r\n    sum = num1 +num2 +num3;\r\n    average =  (float)sum/ 3;\r\n    product = num1*num2*num3;\r\n    if (num1>num2 && num1 > num3){\r\n        largest = num1 ;\r\n    }\r\n    else if (num2>num1 && num2 > num3){\r\n        largest = num2 ;\r\n    }\r\n    else {\r\n        largest = num3;\r\n    }\r\n   if (num1<num2 && num1<num3){\r\n    smallest = num1 ;\r\n   }\r\n   else if (num2<num1 && num2<num3){\r\n    smallest = num2 ;\r\n   }\r\n    else {\r\n     smallest = num3; \r\n    }\r\n    printf(\"Sum : %d \\n\" , sum);\r\n    printf(\"Average : %.2f \\n\" , average);\r\n    printf(\"Product : %d \\n\" , product);\r\n    printf(\"Smallest : %d \\n\" , smallest);\r\n    printf(\"Largest : %d \\n\" , largest);\r\n\r\n    return 0 ;\r\n   \r\n\r\n\r\n}\n/* --- 20701680_Florence Tinevimbo Chigwida/test3.c --- */\n#include  <stdio.h>\r\nint main() {\r\n    char product_code  ;\r\n    int quantity ;\r\n    float weight , price , total ,final_cost , discount;\r\n\r\n   printf(\"Enter the product code (1 for Fruits, 2 for Vegetables, 3 for Dairy Products,4 for Canned Goods, 0 to exit):\"); \r\n   scanf(\"%c\",&product_code) ;\r\n\r\n switch(product_code) {\r\n    case ('1') :\r\n    printf(\"\\nEnter the weight of fruits (in kg): \");\r\n    scanf(\"%f\",&weight);\r\n    printf(\"\\nEnter the price per kg of fruits: \");\r\n    scanf(\"%f\", & price);\r\n    printf(\"\\nEnter discount percentage (or 0 for no discount ): \");\r\n    scanf(\"%f\",&discount);\r\n    total = weight * price ;\r\n    \r\n    final_cost = (1 - discount/100 )* total ;\r\n    \r\n    break ;\r\n    case ('2') :\r\n    printf(\"\\nEnter the weight of vegetables (in kg): \");\r\n    scanf(\"%f\",&weight);\r\n    printf(\"\\nEnter the price per kg of vegetables: \");\r\n    scanf(\"%f\", & price);\r\n    printf(\"\\nEter discount percentage (or 0 for no discount ): \");\r\n    scanf(\"%f\",&discount);\r\n    total = weight * price ;\r\n   \r\n        final_cost = (1- discount/100)* total ;\r\n    \r\n    break ;\r\n    case ('3') :\r\n    printf(\"\\nPlease enter the price of the item\") ;\r\n    scanf(\"%f\",&price) ;\r\n    printf(\"\\nPlease enter the quantity of the items \");\r\n    scanf(\"%d\",&quantity);\r\n     printf(\"\\nEter discount percentage (or 0 for no discount ): \");\r\n    scanf(\"%f\",&discount);\r\n    total = quantity * price ;\r\n    \r\n    final_cost = (1- discount/100 )* total ;\r\n    \r\n    break ;\r\n    case ('4') :\r\n    printf(\"\\nEnter the number of canned goods: \");\r\n    scanf(\"%d\",&quantity);\r\n    printf(\"\\nEnter the price per can: \");\r\n    scanf(\"%f\", & price);\r\n    printf(\"\\nEter discount percentage (or 0 for no discount ): \");\r\n    scanf(\"%f\",&discount);\r\n    total = quantity * price ;\r\n    \r\n        final_cost = (1 - discount/100)* total ;\r\n    \r\n    break ;\r\n    case ('0') :\r\n    return 1 ;\r\n    break ;\r\n    default :\r\n    printf(\"Reenter your code\");\r\n }\r\n\r\n  printf(\"The total cost is %.2f\", total);\r\n  printf(\"\\nThe final cost after applying discount is %.2f\",final_cost) ;\r\n return 0 ;\r\n}\r\n\r\n\r\n\r\n\r\n",
    "feedback": "q1:The program correctly prompts the user for the number of rows and columns and uses nested loops to print a grid of asterisks based on that input. The logic is sound and produces the expected output.q2:The program correctly prompts the user for three integers and computes the sum, average, product, smallest, and largest values. The use of \\t in the scanf format string is unnecessary and may lead to confusion. It's better to use spaces or %d %d %d to read integers separated by spaces without formatting issues.he logic for determining the smallest integer can be simplified.q3:The program correctly implements a menu-driven system that allows users to enter product details, calculate total costs, and apply discounts.\n    The use of a switch statement for different product codes is appropriate, but the code is repetitive across cases, particularly in the handling of discounts and total cost calculations."
  },
  {
    "student_id": "20703971",
    "code": "\n/* --- 20703971_Ahmad Daffa Fatih Aljabbar/20703971_Ahmad Daffa Fatih Aljabbar/Q1.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    int rows, columns;\r\n\r\n    printf(\"Enter the number of columns: \"); //ask for the columns\r\n    scanf(\"%d\", &rows); //scan\r\n\r\n    printf(\"Enter the number of columns: \"); //ask for the columns\r\n    scanf(\"%d\", &columns); //scan\r\n\r\n    for (int i = 0; i < rows; i++) {\r\n        for (int j = 0; j < columns; j++) { \r\n            if (j < columns - 1) {\r\n                printf(\"* \"); //print the \"*\"\r\n            } else {\r\n                printf(\"\\n\"); \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\n/* --- 20703971_Ahmad Daffa Fatih Aljabbar/20703971_Ahmad Daffa Fatih Aljabbar/Q2.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n\r\n    int num1;\r\n    int num2;\r\n    int num3;\r\n    int sum;\r\n    int product;\r\n    int smallest;\r\n    int largest;\r\n    float average;\r\n\r\n    printf(\"enter three integers: \");\r\n    scanf(\"%d %d %d\", &num1, &num2, &num3);\r\n\r\n\r\n    sum = num1 + num2 + num3;\r\n    average = sum / 3.0;\r\n    product = num1 * num2 * num3;\r\n\r\n    if (num1 <= num2 && num1 <= num3) {\r\n        smallest = num1;\r\n    } else if (num2 <= num1 && num2 <= num3) {\r\n        smallest = num2;\r\n    } else {\r\n        smallest = num3;\r\n    }\r\n    \r\n    if (num1 >= num2 && num1 >= num3) {\r\n        largest = num1;\r\n    } else if (num2 >= num1 && num2 >= num3) {\r\n        largest = num2;\r\n    } else {\r\n        largest = num3;\r\n    }\r\n\r\n    printf(\"Sum: %d\\n\", sum);\r\n    printf(\"Average: %d\\n\", average);\r\n    printf(\"Product: %d\\n\", product);\r\n    printf(\"Smallest: %d\\n\", smallest);\r\n    printf(\"largest: %d\\n\", largest);\r\n    \r\n\r\n\r\n}\n/* --- 20703971_Ahmad Daffa Fatih Aljabbar/20703971_Ahmad Daffa Fatih Aljabbar/Q3.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    int productCode;\r\n    float weight;\r\n    float pricePerKg;\r\n    float discount;\r\n    float totalCost;\r\n    float finalCost;\r\n\r\n    printf(\"Enter the product code(1 for fruit, 2 for vegetables, 3 for dairy products, 4 for Canned Goods, 0 to exit): \");\r\n    scanf(\"%d\", &productCode);\r\n\r\n     if (productCode == 0) {\r\n        printf(\"Exiting...\\n\");\r\n        return 0;\r\n    }\r\n    printf(\"Enter the weight (in kg): \");\r\n    scanf(\"%f\", &weight);\r\n\r\n    printf(\"Enter the price per kg: \");\r\n    scanf(\"%f\", &pricePerKg);\r\n\r\n    printf(\"Enter discount percentage (or 0 for no discount): \");\r\n    scanf(\"%f\", &discount);\r\n\r\n    totalCost = weight * pricePerKg;\r\n    printf(\"The total cost is: $%.2f\\n\", totalCost);\r\n\r\n    finalCost = totalCost - (totalCost * discount / 100);\r\n    printf(\"The final cost after applying the discount is: $%.2f\\n\", finalCost);\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n",
    "feedback": "q1:The program successfully prints a grid of asterisks based on user-defined rows and columns. The codes have some unnecessary logic which can be improved.q2: The program correctly calculates the sum, average, product, smallest, and largest integers from three inputs.For improved clarity, consider printing the average with a format specifier that reflects its floating-point nature (e.g., %.2f for two decimal places). q3: The program partially meets the requirements but lacks the use of a switch statement or similar logic to handle different product codes. This leads to redundant inputs that are not relevant for all product types."
  },
  {
    "student_id": "20590645",
    "code": "",
    "feedback": "q1:The code effectively fulfills the assignment requirements and demonstrates a solid understanding of nested loops for printing asterisks.q2:The program correctly calculates the sum, product, average, smallest, middle, and largest values of the three integers.q3: did not use switch case instead of ifâ€¦else. The code effectively calculates costs and applies discounts, but it could be streamlined to avoid repetition"
  },
  {
    "student_id": "20607863",
    "code": "\n/* --- 20607863_Dean Agha Koeswantoro/20607863_Dean Agha Koeswantoro/Question1.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    // Initialize row and column variables\r\n    int nRow = 0, nColumn = 0;\r\n\r\n    // Prompt user input\r\n    printf(\"Enter the number of rows: \");\r\n    scanf(\"%d\", &nRow);\r\n    printf(\"Enter the number of columns: \");\r\n    scanf(\"%d\", &nColumn);\r\n\r\n    // Loop for each row\r\n    for (int row = 0; row < nRow; row++) {\r\n        // Loop to print one line\r\n        for (int column = 0; column < nColumn; column++) {\r\n            printf(\"* \");\r\n        }\r\n        \r\n        // Print new line\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\n/* --- 20607863_Dean Agha Koeswantoro/20607863_Dean Agha Koeswantoro/Question2.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    // Initialize all of the variables\r\n    int num1 = 0, num2 = 0, num3 = 0;\r\n    int sum = 0, prod = 0, min = 0, max = 0;\r\n    float avg = 0.0;\r\n\r\n    // Prompt user for input\r\n    printf(\"Enter 3 space-separated integers (eg. 10 20 30): \");\r\n    scanf(\"%d %d %d\", &num1, &num2, &num3);\r\n\r\n    // Calculate sum\r\n    sum = num1 + num2 + num3;\r\n\r\n    // Calculate average\r\n    avg = (float) sum / 3;\r\n\r\n    // Calculate product\r\n    prod = num1 * num2 * num3;\r\n\r\n    // Calculate min\r\n    min = num1;\r\n    if (num2 < min) {\r\n        min = num2;\r\n    } \r\n    if (num3 < min) {\r\n        min = num3;\r\n    }\r\n\r\n    // Calculate max\r\n    max = num1;\r\n    if (num2 > max) {\r\n        max = num2;\r\n    }\r\n    if (num3 > max) {\r\n        max = num3;\r\n    }\r\n\r\n    // Output calculations (mul)\r\n    printf(\"Sum: %d\\n\"\r\n           \"Average: %.2f\\n\"\r\n           \"Product: %d\\n\"\r\n           \"Smallest: %d\\n\"\r\n           \"Largest: %d\", sum, avg, prod, min, max);\r\n\r\n    return 0;\r\n}\n/* --- 20607863_Dean Agha Koeswantoro/20607863_Dean Agha Koeswantoro/Question3.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    // Initialize product info variables\r\n    int amount = 0;\r\n    float weight = 0.0, price = 0.0, discount = 0.0, cost = 0.0;\r\n\r\n    // Program loop with exit flag\r\n    int exit = 0;\r\n    int choice = 0;\r\n    while (1) {\r\n        // Initialize valid input flag\r\n        int valid = 1;\r\n\r\n        // Print menu and prompt for user choice\r\n        printf(\"List of Product Codes\\n\"\r\n               \"Fruit: 1\\n\"\r\n               \"Vegetable: 2\\n\"\r\n               \"Dairy Product: 3\\n\"\r\n               \"Canned Goods: 4\\n\"\r\n               \"Enter product code (0 to exit): \");\r\n        scanf(\"%d\", &choice);\r\n\r\n        // Product switch cases (by weight/per item)\r\n        switch (choice) {\r\n            case 0: // Exit\r\n                exit = 1;\r\n                puts(\"Have a nice day!\");\r\n                break;\r\n            case 1: // Fruits\r\n                // Prompt for weight\r\n                printf(\"Enter weight of fruit (kg): \");\r\n                scanf(\"%f\", &weight);\r\n\r\n                // Prompt for price per kg\r\n                printf(\"Enter price per kg of fruit ($): \");\r\n                scanf(\"%f\", &price);\r\n\r\n                // Calculate cost\r\n                cost = weight * price;\r\n\r\n                break;\r\n            case 2: // Vegetables\r\n                // Prompt for weight\r\n                printf(\"Enter weight of vegetable (kg): \");\r\n                scanf(\"%f\", &weight);\r\n\r\n                // Prompt for price per kg\r\n                printf(\"Enter price per kg of vegetable ($): \");\r\n                scanf(\"%f\", &price);\r\n\r\n                // Calculate cost\r\n                cost = weight * price;\r\n\r\n                break;\r\n            case 3: // Dairy Products\r\n                // Prompt for amount\r\n                printf(\"Enter amount of dairy products: \");\r\n                scanf(\"%d\", &amount);\r\n                \r\n                // Prompt for price per item\r\n                printf(\"Enter price per item of dairy product ($): \");\r\n                scanf(\"%f\", &price);\r\n\r\n                // Calculate Cost\r\n                cost = amount * price;\r\n\r\n                break;\r\n            case 4: // Canned Good\r\n                // Prompt for amount\r\n                printf(\"Enter amount of canned goods: \");\r\n                scanf(\"%d\", &amount);\r\n                \r\n                // Prompt for price per item\r\n                printf(\"Enter price per item of canned good ($): \");\r\n                scanf(\"%f\", &price);\r\n\r\n                // Calculate Cost\r\n                cost = amount * price;\r\n\r\n                break;\r\n            default: // Invalid input\r\n                puts(\"Invalid choice\\n\");\r\n                valid = 0;\r\n                break;\r\n        }\r\n\r\n        // Handle exit of program\r\n        if (exit) {\r\n            break;\r\n        }\r\n\r\n        // Check for valid input\r\n        if (valid) {\r\n            // Prompt for discount\r\n            printf(\"Enter discount amount (0 for no discount): \");\r\n            scanf(\"%f\", &discount);\r\n\r\n            // Display total cost\r\n            printf(\"Total cost: $%.2f\\n\", cost);\r\n\r\n            // Calculate and display final cost with discount\r\n            cost = cost * (1-discount/100);\r\n            printf(\"Final cost with discount: $%.2f\\n\", cost);\r\n            puts(\"\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}",
    "feedback": "q1:The program effectively prompts the user for the number of rows and columns, and it correctly uses nested loops to print a grid of asterisks based on the user input. The logic is sound, and the output matches expectations.q2:The program correctly prompts the user for three integers and calculates the sum, average, product, smallest, and largest values. The logic used to determine the minimum and maximum values is accurate, and the calculations yield the expected results.q3:The program correctly implements a menu-based system to handle different product types and calculates total costs based on user input. The use of a while loop allows continuous input until the user chooses to exit, which is a good design choice."
  },
  {
    "student_id": "20596548",
    "code": "",
    "feedback": "q1:The program correctly prompts for the number of rows and columns and prints a grid of asterisks as expected. However, there is a small issue with variable shadowing in the inner loop.q2:The program correctly computes the sum, average, product, smallest, and largest of three integers based on user input. Ensure that the average calculation uses floating-point division by modifying it to average = sum / 3.0; to retain precision. Consider using a simpler approach to find the smallest and largest numbers. You could initialize smallest and largest with num1 and then update them based on comparisons.q3:The program correctly calculates the total cost based on user input for various product types and applies a discount at the end."
  },
  {
    "student_id": "20705220",
    "code": "\n/* --- 20705220_ErynCheeEnNing/Exam 1 Programming/q1.c --- */\n#include <stdio.h>\r\n\r\nint main(){\r\n\r\n    int rows = 0;\r\n    int columns = 0;\r\n\r\n\r\n\r\n    printf(\"Enter the number of rows: \\n\"); //prompt user to enter no. of rows\r\n    scanf(\"%d\", &rows);\r\n\r\n    printf(\"Enter the number of columns: \\n\"); //prompt user to enter no. of columns\r\n    scanf(\"%d\", &columns);\r\n\r\n    for (int i=1; i<=rows; i++){\r\n\r\n        for (int j=1; j<=columns; j++){\r\n            printf(\"*\");\r\n        }\r\n\r\n\r\n        printf(\"\\n\");\r\n    }\r\n    \r\n\r\n    return 0;\r\n}\n/* --- 20705220_ErynCheeEnNing/Exam 1 Programming/q2.c --- */\n#include <stdio.h>\r\n\r\nint findsmallest(int integer1, int integer2, int integer3){\r\n    int smallest = integer1;\r\n\r\n    if(integer2 < smallest){\r\n        smallest = integer2;\r\n    }\r\n    if(integer3 < smallest){\r\n        smallest = integer3;\r\n    }\r\n\r\n    return smallest;\r\n\r\n\r\n}\r\n\r\nint findlargest(int integer1, int integer2, int integer3){\r\n    int largest = integer1;\r\n\r\n    if(integer2 > largest){\r\n        largest = integer2;\r\n    }\r\n    if(integer3 > largest){\r\n        largest = integer3;\r\n    }\r\n\r\n    return largest;\r\n\r\n\r\n}\r\n\r\nint main(){\r\n\r\n    int numberOfIntegers = 0;\r\n    int integer1 = 0;\r\n    int integer2 = 0;\r\n    int integer3 = 0;\r\n    int sum = 0;\r\n    float average = 0.0;\r\n    float product = 0.0;\r\n\r\n    printf(\"Enter 3 integers separated by space: \\n\");\r\n    scanf(\"%d %d %d\", &integer1, &integer2, &integer3);\r\n\r\n    sum = integer1 + integer2 + integer3;\r\n    average = (float)sum / 3;\r\n    product = (float) integer1 * integer2 * integer3;\r\n\r\n    int smallest = findsmallest(integer1, integer2, integer3);\r\n    int largest = findlargest(integer1, integer2, integer3);\r\n\r\n    printf(\"Sum: %d\\n\", sum);\r\n    printf(\"Average: %.2f\\n\", average);\r\n    printf(\"Product: %.2f\\n\", product);\r\n    printf(\"Smallest: %d\\n\", smallest);\r\n    printf(\"Largest: %d\\n\", largest);\r\n\r\n\r\n\r\n    return 0;\r\n}\n/* --- 20705220_ErynCheeEnNing/Exam 1 Programming/q3.c --- */\n#include <stdio.h>\r\n\r\nint main(){\r\n\r\n    int productCode = 0;\r\n    float weight = 0.0;\r\n    float price = 0.0;\r\n    float discount = 0.0;\r\n    float fruitVegeBeforeDiscount = 0.0;\r\n    float fruitVegeAfterDiscount = 0.0;\r\n\r\n    int quantity = 0;\r\n    float dairyCannedBeforeDiscount = 0.0;\r\n    float dairyCannedAfterDiscount = 0.0;\r\n\r\n    printf(\"Enter the product code (1 for Fruits, 2 for Vegetables, 3 for Dairy Products, 4 for Canned Goods, 0 to exit): \");\r\n    scanf(\"%d\", &productCode);\r\n\r\n    printf(\"\\n\");\r\n\r\n    switch (productCode){\r\n\r\n        //For Fruits\r\n        case 1:\r\n        printf(\"Enter the weight of fruits (in kg): \");\r\n        scanf(\"%f\", &weight);\r\n\r\n        printf(\"Enter the price per kg of fruits: \");\r\n        scanf(\"%f\", &price);\r\n\r\n        printf(\"Enter discount percentage (or 0 for no discount): \");\r\n        scanf(\"%f\", &discount);\r\n\r\n        fruitVegeBeforeDiscount = weight * price;\r\n        printf(\"The total cost is $%.2f.\\n\" ,fruitVegeBeforeDiscount);\r\n\r\n        fruitVegeAfterDiscount = (1-(discount/100)) * fruitVegeBeforeDiscount;\r\n        printf(\"The final cost after discount is $%.2f.\\n\", fruitVegeAfterDiscount);\r\n\r\n        break;\r\n\r\n        //For Vegetables\r\n        case 2:\r\n\r\n        printf(\"Enter the weight of vegetables (in kg): \");\r\n        scanf(\"%f\", &weight);\r\n\r\n        printf(\"Enter the price per kg of vegetables: \");\r\n        scanf(\"%f\", &price);\r\n\r\n        printf(\"Enter discount percentage (or 0 for no discount): \");\r\n        scanf(\"%f\", &discount);\r\n\r\n        fruitVegeBeforeDiscount = weight * price;\r\n        printf(\"The total cost is $%.2f.\\n\" ,fruitVegeBeforeDiscount);\r\n\r\n        fruitVegeAfterDiscount = (1-(discount/100)) * fruitVegeBeforeDiscount;\r\n        printf(\"The final cost after discount is $%.2f.\\n\", fruitVegeAfterDiscount);\r\n\r\n        break;\r\n\r\n        //For Dairy products\r\n        case 3: \r\n\r\n        printf(\"Enter the quantity of dairy products: \");\r\n        scanf(\"%d\", &quantity);\r\n\r\n        printf(\"Enter the price for one dairy product: \");\r\n        scanf(\"%f\", &price);\r\n\r\n        printf(\"Enter discount percentage (or 0 for no discount): \");\r\n        scanf(\"%f\", &discount);\r\n\r\n        dairyCannedBeforeDiscount = quantity * price;\r\n        printf(\"The total cost is $%.2f.\\n\" ,dairyCannedBeforeDiscount);\r\n\r\n        dairyCannedAfterDiscount = (1-(discount/100)) * dairyCannedBeforeDiscount;\r\n        printf(\"The final cost after discount is $%.2f.\\n\", dairyCannedAfterDiscount);\r\n        \r\n        break;\r\n\r\n        //For Canned goods\r\n        case 4: \r\n        printf(\"Enter the quantity of canned goods: \");\r\n        scanf(\"%d\", &quantity);\r\n\r\n        printf(\"Enter the price for one canned goods: \");\r\n        scanf(\"%f\", &price);\r\n\r\n        printf(\"Enter discount percentage (or 0 for no discount): \");\r\n        scanf(\"%f\", &discount);\r\n\r\n        dairyCannedBeforeDiscount = quantity * price;\r\n        printf(\"The total cost is $%.2f.\\n\" ,dairyCannedBeforeDiscount);\r\n\r\n        dairyCannedAfterDiscount = (1-(discount/100)) * dairyCannedBeforeDiscount;\r\n        printf(\"The final cost after discount is $%.2f.\\n\", dairyCannedAfterDiscount);\r\n        break;\r\n\r\n        //For exit\r\n        case 0:\r\n        printf(\"Exiting.\\n\");\r\n        break;\r\n\r\n        //For Default\r\n        default:\r\n        printf(\"Invalid product number.\\n\");\r\n        break;\r\n\r\n    }\r\n    return 0;\r\n}",
    "feedback": "q1:The program correctly prompts the user for the number of rows and columns and uses nested loops to print a grid of asterisks based on that input. The logic is sound and produces the expected output.q2:The program correctly prompts the user for three integers and uses functions to determine the smallest and largest of the three. The calculations for the sum, average, and product are all correctly implemented.q3: The program effectively implements a menu-driven system that allows users to enter product details based on a product code, calculate total costs, and apply discounts.The logic for calculating costs is repeated for fruits and vegetables, as well as for dairy products and canned goods. This could be refactored into a function to reduce redundancy."
  },
  {
    "student_id": "20712132",
    "code": "",
    "feedback": "q1:The program correctly prints a grid of asterisks based on user-defined rows and columns. The nested loops function as intended, producing the desired output.q2: The program correctly calculates the sum, average, product, smallest, and largest of three integers. The average calculation uses casting to ensure it is computed as a floating-point number, which is a good practice.q3:The code effectively performs calculations for different products and applies discounts, but ensure that totalCost is properly initialized before use."
  },
  {
    "student_id": "20611605",
    "code": "\n/* --- 20612781_Lim Chai Shuen/20612781_Lim Chai Shuen/Q1.c --- */\n#include <stdio.h>\n\nint main()\n{\n    // define variable\n\tint row = 0;\n\tint column = 0;\n    \n    // ask user input number of row and column\n\tprintf(\"Enter the number of rows: \");\n\tscanf(\"%d\", &row);\n\tprintf(\"Enter the number of columns: \");\n\tscanf(\"%d\", &column);\n\n    // loop for printing '*'\n\tfor (int j=0; j<row; ++j) {\n\t    for ( int i=0; i<column; i++) {\n\t        printf(\"* \"); \n\t    }\n\t    printf(\"\\n\");\n\t}\n\n\treturn 0; // program execute successfully\n}\n/* --- 20612781_Lim Chai Shuen/20612781_Lim Chai Shuen/Q2.c --- */\n#include <stdio.h>\n\nint main()\n{\n    // define variable\n    int integer1;\n    int integer2;\n    int integer3;\n    int sum = 0;\n    int smallest;\n    int largest;\n\n    // ask user input 3 integer seperated with space\n    printf(\"Enter three integers seperated by spaces: \");\n    scanf(\"%d %d %d\", &integer1, &integer2, &integer3);\n    \n    // calculate sum\n    sum = integer3 + integer2 + integer1;\n    printf(\"Sum: %d\\n\", sum); // display sum\n    \n    // calculate average of 3 integer\n    float average = (float) sum / 3;\n    \n    // calculate product of 3 integer\n    int product = integer1 * integer2 * integer3;\n    \n    // display average and product result\n    printf(\"Average: %.2f\\n\", average);\n    printf(\"Product: %d\\n\", product);\n    \n    // condition for choosing largeat value and smallest value\n    if (integer1>integer2 && integer1>integer3 && integer3>integer2) {\n        // diaplay result\n        smallest = integer2;\n        largest = integer1;\n    }\n    \n    else if (integer2>integer1 && integer2>integer3 && integer1>integer3) {\n        // diaplay result\n        smallest = integer3;\n        largest = integer2;\n    }\n    \n    else if (integer3>integer1 && integer3>integer2 && integer1>integer2) {\n        // diaplay result\n        smallest = integer2;\n        largest = integer3;\n    }\n    \n    printf(\"Smallest: %d\\n\", smallest);\n    printf(\"Largest: %d\\n\", largest);\n    \n    return 0; // program execute successfully\n}\n\n/* --- 20612781_Lim Chai Shuen/20612781_Lim Chai Shuen/Q3.c --- */\n#include <stdio.h>\n\nint main()\n{\n    // define variable\n    int choice = 0;\n    float weight = 0;\n    float price = 0;\n    float discount = 0;\n    float cost = 0;\n    float amountDiscount = 0;\n    float afterDis = 0;\n    \n    // User input cchoice\n    printf(\"Enter the product code (1 for Fruits, 2 for Vegetables, 3 for Dairy Products, 4 for Canned Goods, 0 to exit): \");\n    scanf(\"%d\", &choice);\n    \n    // choice is 0, then exit\n    if (choice == 0) {\n        printf(\"Exiting program...\");\n    }\n    \n    // selection for the user choice to processing the program\n    switch (choice) {\n        \n        // choice is 1\n        case 1:\n            // input data\n            printf(\"Enter the weight of fruits (in kg):\");\n            scanf(\"%f\", &weight);\n            printf(\"Enter the price per kg of fruits: \");\n            scanf(\"%f\", &price);\n            printf(\"Enter discount percentage (or 0 for no discount): \");\n            scanf(\"%f\", &discount);\n            \n            // calculation\n            cost = price * weight;\n            \n            if (discount!=0) {\n                amountDiscount = cost * (discount/100);\n                afterDis = cost - amountDiscount;\n            }\n            \n            else {\n                afterDis = cost;\n            }\n            \n            break;\n            \n        // choice is 2\n        case 2:\n            // input data\n            printf(\"Enter the weight of vegetables (in kg):\");\n            scanf(\"%f\", &weight);\n            printf(\"Enter the price per kg of vegetables: \");\n            scanf(\"%f\", &price);\n            printf(\"Enter discount percentage (or 0 for no discount): \");\n            scanf(\"%f\", &discount);\n            \n            // calculation\n            cost = price * weight;\n            \n            if (discount!=0) {\n                amountDiscount = cost * (discount/100);\n                afterDis = cost - amountDiscount;\n            }\n            \n            else {\n                afterDis = cost;\n            }\n            \n            break;\n            \n        \n        // choice is 3\n        case 3:\n            // input data\n            printf(\"Enter the weight of dairy products (in kg):\");\n            scanf(\"%f\", &weight);\n            printf(\"Enter the price per kg of dairy products: \");\n            scanf(\"%f\", &price);\n            printf(\"Enter discount percentage (or 0 for no discount): \");\n            scanf(\"%f\", &discount);\n            \n            // calculation\n            cost = price * weight;\n            \n            if (discount!=0) {\n                amountDiscount = cost * (discount/100);\n                afterDis = cost - amountDiscount;\n            }\n            \n            else {\n                afterDis = cost;\n            }\n            \n            break;\n        \n        // choice is 4\n        case 4:\n            // input data\n            printf(\"Enter the weight of  Canned Goods (in kg):\");\n            scanf(\"%f\", &weight);\n            printf(\"Enter the price per kg of  Canned Goods: \");\n            scanf(\"%f\", &price);\n            printf(\"Enter discount percentage (or 0 for no discount): \");\n            scanf(\"%f\", &discount);\n            \n            // calculation\n            cost = price * weight;\n            \n            if (discount!=0) {\n                amountDiscount = cost * (discount/100);\n                afterDis = cost - amountDiscount;\n            }\n            \n            else {\n                afterDis = cost;\n            }\n            \n            break;\n            \n        // Invalid choice\n        default:\n            printf(\"Invalid choice!\");\n    }\n    \n    // display result in 2 s.f.\n    printf(\"The total cost is: $%.2f\\n\", cost);\n    printf(\"The final cost after applying the discount is: $%.2f\\n\", afterDis);\n\n    return 0; // program execute successfully\n}\n",
    "feedback": "q1:The program prompts the user correctly for the number of rows and columns and attempts to print a grid of asterisks. However, the inner loop starts from 1, which results in one fewer asterisk printed in each row than specified by the user. The correct loop should start from 0 to ensure the right number of asterisks is printed.q2:The program correctly calculates and displays the sum, average, product, smallest, and largest of three numbers input by the user.q3:The variable total is used to accumulate costs but is not initialized before its first use."
  },
  {
    "student_id": "20577892",
    "code": "\n/* --- 20577892_Ahmed_Amin_Mohamed_Osman/20577892_Ahmed_Amin_Mohamed_Osman/Q1.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    int rows;\r\n    int columns;\r\n\r\n    printf(\"Enter the number of rows: \");\r\n    scanf(\"%d\", &rows);\r\n    printf(\"Enter the number of columns: \");\r\n    scanf(\"%d\", &columns);\r\n\r\n    for (int j = 0; i < columns; i++) {\r\n        for (i=0; i<width;i++)\r\n            printf(\"*\");\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\n/* --- 20577892_Ahmed_Amin_Mohamed_Osman/20577892_Ahmed_Amin_Mohamed_Osman/Q2.c --- */\n/******************************************************************************\r\n\r\nWelcome to GDB Online.\r\n  GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, \r\n  C#, OCaml, VB, Perl, Swift, Prolog, Javascript, Pascal, COBOL, HTML, CSS, JS\r\n  Code, Compile, Run and Debug online from anywhere in world.\r\n\r\n*******************************************************************************/\r\n#include <stdio.h>\r\n\r\n\r\n\r\nint main() {\r\n    int int_1 = 0;\r\n    int int_2 = 0;\r\n    int int_3 = 0;\r\n    int max  = 0;\r\n    int min = 0;\r\n    \r\n    printf(\"Enter three integers separated by spaces:\");\r\n    scanf(\"%d %d %d\", &int_1, &int_2, &int_3);\r\n    \r\n    int sum = int_1 + int_2 + int_3;\r\n    float avg = sum / 3;\r\n    int product = int_1 * int_2 * int_3;\r\n    \r\n    printf(\"Sum: %d \\n\", sum);\r\n    printf(\"Average: %.2f \\n\", avg);\r\n    printf(\"Product: %d \\n\", product);\r\n     \r\n    if(int_1>int_2) {\r\n        max=int_1;\r\n        min=int_2;\r\n    } \r\n    else{\r\n        max=int_2;\r\n        min=int_1;\r\n    } \r\n\r\n    if(int_3>max) {\r\n        max=int_3;\r\n    } \r\n    \r\n    if(int_3<min) {\r\n        min=int_3;\r\n    }\r\n    \r\n    printf(\"Largest: %d \\n\", max);\r\n    printf(\"Smallest: %d\", min);\r\n    \r\n    return 0;\r\n}\r\n\n/* --- 20577892_Ahmed_Amin_Mohamed_Osman/20577892_Ahmed_Amin_Mohamed_Osman/Q3.c --- */\n#include <stdio.h>\r\n\r\nint  main() {\r\n    int product;\r\n    float sum = 0;\r\n    float weight = 0;\r\n    float price = 0;\r\n    float discount = 0;\r\n    int quantity;\r\n    \r\n\r\n    printf(\"Enter product code (1 for fruits, 2 for vegetables, 3 for dairy products, 4 for canned goods, 0 to exit)\");\r\n    scanf(\"%d\", &product);\r\n    \r\n   \r\n    switch(product) {\r\n        case 1:\r\n        {\r\n            printf(\"Enter the weight of fruits (in kg)\");\r\n            scanf(\"%f\", &weight);\r\n            printf(\"Enter the price per kg of fruits\");\r\n            scanf(\"%f\", &price);\r\n            price = price*weight;\r\n            break;\r\n        } \r\n        case 2:\r\n        {\r\n            printf(\"Enter the weight of vegetables (in kg)\");\r\n            scanf(\"%f\", &weight);\r\n            printf(\"Enter the price per kg of vegetables\");\r\n            scanf(\"%f\", &price);\r\n             \r\n            price = price*weight;\r\n            \r\n            break;\r\n        } \r\n        case 3:\r\n        {\r\n            printf(\"Enter the price of dairy product: \");\r\n            scanf(\"%f\", &price);\r\n            price = price;\r\n            \r\n            break;\r\n        } \r\n        case 4:\r\n        {\r\n            printf(\"Enter the price of one item: \");\r\n            scanf(\"%f\", &price);\r\n            printf(\"Enter how many products you want: \");\r\n            scanf(\"%d\", &quantity);\r\n            \r\n            price = price*quantity;\r\n        \r\n            break;\r\n        } \r\n        \r\n        default: {\r\n            printf(\"Exit...\");\r\n        }\r\n    }\r\n        \r\n        printf(\"The total cost is: $%.2f \\n\", price);\r\n        printf(\"Enter discount percentage (or no discount)\");\r\n        scanf(\"%f\", &discount);\r\n        price = price - discount;\r\n        printf(\"The final cost after applying discount is: $%.2f\", price);\r\n    \r\n\r\n    return 0;\r\n}",
    "feedback": "q1:The program has several issues, particularly with variable naming and loop control. The outer loop uses j but references i in the inner loop, leading to a compilation error. Additionally, width is not defined, which will cause further errors.q2:The program effectively implements the required functionality, but consider modifying the average calculation to ensure it reflects a floating-point result.q3:The program calculates the total cost based on user input for different product types and applies a discount. However, the discount application logic is incorrect; it should calculate the discount based on the original price rather than subtracting the discount percentage directly.  incomplete output (case 3 not taking quantity)"
  },
  {
    "student_id": "20611251",
    "code": "\n/* --- 20611251_Adrian Lee Joon Yin/20611251_Adrian Lee Joon Yin/Q1.c.c --- */\n#include <stdio.h>\r\n\r\nint main(){\r\n    int row = 0;\r\n    int col = 0;\r\n\r\n    printf(\"Enter the amount of rows:\");\r\n    scanf(\"%d\", &row);\r\n\r\n    printf(\"Enter the amount of columns:\");\r\n    scanf(\"%d\", &col);\r\n\r\n    for (int i = 0; i < row; i++) {\r\n        for (int j = 0; j < col; j++) {\r\n            printf(\"*\");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n    \r\n}\n/* --- 20611251_Adrian Lee Joon Yin/20611251_Adrian Lee Joon Yin/Q2.c.c --- */\n#include <stdio.h>\r\n\r\nint main(){\r\n\r\n    int first = 0;\r\n    int second = 0;\r\n    int third = 0;\r\n    int sum = 0;\r\n    int average = 0;\r\n    int product = 0;\r\n    int smallest = 0;\r\n    int largest = 0;\r\n\r\n    printf(\"Enter three integers separated by a single space:\");\r\n    scanf(\"%d\\t%d\\t%d\",&first,&second,&third);\r\n\r\n    sum = first + second + third;\r\n    average = sum / 3;\r\n    product = first * second * third;\r\n\r\n    if(first >= second){\r\n        largest = first;\r\n        if (second >= third){\r\n            smallest = third;\r\n        }\r\n        else{\r\n            smallest = second;\r\n        }\r\n    }\r\n    else if (second >= third){\r\n        largest = second;\r\n        smallest = first;\r\n    }\r\n    else{\r\n        largest = third;\r\n        smallest = first;\r\n    }\r\n\r\n    printf(\"Sum:%d\\nAverage:%d\\nProduct:%d\\nSmallest:%d\\nLargest:%d\\n\",sum,average,product,smallest,largest);\r\n}\n/* --- 20611251_Adrian Lee Joon Yin/20611251_Adrian Lee Joon Yin/Q3.c.c --- */\n#include <stdio.h>\r\n\r\nint main(){\r\n    int prodcode;\r\n    float price;\r\n    int weight;\r\n    int discount;\r\n    float totalcost,finalcost;\r\n\r\n\r\n    printf(\"Enter a product code(1 for Fruits, 2 for Vegetables, 3 for Dairy Products,4 for Canned Goods, 0 to exit):\\n\");\r\n    scanf(\"%d\", &prodcode);\r\n\r\n    if (prodcode == 0)\r\n    {\r\n        printf(\"Exiting program...\");\r\n        return 0;\r\n    }\r\n    \r\n    switch (prodcode){\r\n    case 1:\r\n        printf(\"Enter the weight of fruits: \");\r\n        scanf(\"%d\", &weight);\r\n\r\n        printf(\"Enter the price of fruits: \");\r\n        scanf(\"%f\", &price);\r\n        break;\r\n\r\n    case 2:\r\n        printf(\"Enter the weight of vegetables in kg: \");\r\n        scanf(\"%d\", &weight);\r\n\r\n        printf(\"Enter the price of vegetables: \");\r\n        scanf(\"%f\", &price);\r\n        break;\r\n\r\n    case 3:\r\n        printf(\"Enter the weight of dairy products in kg: \");\r\n        scanf(\"%d\", &weight);\r\n\r\n        printf(\"Enter the price of dairy products: \");\r\n        scanf(\"%f\", &price);\r\n        break;\r\n\r\n    case 4:\r\n        printf(\"Enter the weight of canned goods in kg: \");\r\n        scanf(\"%d\", &weight);\r\n\r\n        printf(\"Enter the price of canned goods:\");\r\n        scanf(\"%f\", &price);\r\n        break;\r\n\r\n    }\r\n\r\n    \r\n\r\n    printf(\"Enter the discount, 0 for no discount:\");\r\n    scanf(\"%d\", &discount);\r\n\r\n\r\n\r\n\r\n    totalcost = price * weight;\r\n    finalcost = ((totalcost*100)-(totalcost * discount))/100;\r\n\r\n    printf(\"Cost before discount is %.2f\\n\",totalcost);\r\n    printf(\"Cost after discount is %.2f\",finalcost);\r\n\r\n}",
    "feedback": "q1:The program correctly prints a grid of asterisks based on user-specified rows and columns.q2: The code effectively performs the required calculations, but it would benefit from using a float for the averageq3: The program correctly calculates the total cost and applies a discount based on the product type. It handles the exit condition properly as well."
  },
  {
    "student_id": "20718864",
    "code": "\n/* --- 20718864_Adrian Naufal Mazaya/20718864_Adrian Naufal Mazaya/Q1.c --- */\n\r\n#include <stdio.h>\r\nint sum(int a, int b, int c);\r\n\r\n\r\nint main(void) {\r\n\r\n// Question 1\r\n\r\n    // define i and j as int\r\n    int i;\r\n    int j;\r\n\r\n    //create a nested loop and 2d arrat for the asterix (*)  \r\n    for (i = 0; i<8; i++) {\r\n      for (j = 0 ; j<9 ; j++){  \r\n            printf(\"*\");\r\n        }\r\n        // this what makes it 2d, it prints after the 8th asterix and then so on (8, 16, 24, etc)\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    printf(\"\\n\");\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n    \r\n\r\nint sum(int a, int b, int c){\r\nreturn a + b + c;\r\n\r\n}\n/* --- 20718864_Adrian Naufal Mazaya/20718864_Adrian Naufal Mazaya/Q2.c --- */\n\r\n\r\n#include <stdio.h>\r\n\r\n\r\n\r\nint main() {\r\n\r\n// Question 2\r\n\r\n    int x;\r\n    int y;\r\n    int z;\r\n    double average;\r\n\r\n    // prompt user for 3 integer\r\n    printf(\"Enter 3 integer: \");\r\n    scanf(\"%d%d%d\", &x, &y, &z);\r\n    // sum the 3 integer\r\n    printf(\"Sum: %d\\n\", x + y + z);\r\n    // average of the 3 numbers\r\n    printf(\"Average: %d\\n\", (x + y + z)/3 );\r\n    // multiply of the 3 numbers\r\n    printf(\"Product (multiply): %d\\n\", x * y * z);\r\n    // smallest integer\r\n\r\n    if(x >= y && x >= z){\r\n        printf(\"Biggest: %d\\n\", x);\r\n            } else if (y >= x && y >= z) {\r\n                printf(\"Biggest: %d\\n\", y);\r\n            } else {\r\n                printf(\"Biggest: %d\\n\", z);\r\n            }   \r\n\r\n\r\n        if(x <= y && x <= z){\r\n        printf(\"Smalest: %d\\n\", x);\r\n            } else if (y <= x && y <= z) {\r\n                printf(\"Smallest: %d\\n\", y);\r\n            } else {\r\n                printf(\"Smallest: %d\\n\", z);\r\n            }   \r\n\r\n    return 0;\r\n}\r\n\r\n    \r\n\r\n\n/* --- 20718864_Adrian Naufal Mazaya/20718864_Adrian Naufal Mazaya/Q3.c --- */\n\r\n\r\n#include <stdio.h>\r\n\r\n\r\n\r\nint main() {\r\n\r\n// Question 3\r\n\r\n// Describe the options\r\n   \r\n    int aCount = 0;\r\n    int bCount = 0;\r\n    int dCount = 0;\r\n\r\n    int price = 0;\r\n    \r\n    printf(\"Enter the product code:\\n 1 for fruits\\n 2 for vegetables\\n 3 for Dairy Product\\n 4 for canned goods\\n 0 to exit\\n\");\r\n    int product = 0;\r\n\r\n    while ((product = getchar()) !=0);\r\n        // determine what number you want to pick\r\n        switch(product){\r\n            case 1:\r\n                printf(\"Enter the weight of fruits (in kg): \");\r\n                scanf(\"%d\", aCount);\r\n                printf(\"Enter the price per kg fruits: \");\r\n                scanf(\"%d\", price);\r\n                break;\r\n            case 2:\r\n                printf(\"Enter the weight of vegetables (in kg): \");\r\n                scanf(\"%d\", bCount);\r\n                printf(\"Enter the price per kg vegetables: \");\r\n                scanf(\"%d\", price);\r\n                break;\r\n            case 3:\r\n                printf(\"Enter the Price of the Daily Products: \");\r\n                scanf(\"%d\", price);\r\n                break;\r\n            case 4: \r\n                printf(\"Enter the number of canned goods: \");\r\n                scanf(\"%d\", dCount);\r\n                printf(\"Enter the price: \");\r\n                scanf(\"%d\", price);\r\n                break;\r\n\r\n    }\r\n    \r\n    printf(\"The total cost is: $%d\", price);\r\n    int final_cost; \r\n    printf(\"The final cost after applying discount: \");\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n    ",
    "feedback": "q1:Rows and columns should be from user.The code effectively accomplishes the task of printing a grid of asterisks. If the sum function is not needed, consider removing it to streamline the code.q2: The program correctly calculates the sum, product, and identifies the largest and smallest integers from three inputs. However, the average is calculated as an integer, which may lead to loss of precision.q3:The code does not correctly implement the required functionality. Focus on properly handling user input and performing calculations for costs and discounts. Consider reviewing how to properly use scanf and control structures for a better implementation."
  },
  {
    "student_id": "20602511",
    "code": "\n/* --- 20602511_Wong Cheuk Kei/20602511_Wong Cheuk Kei/Question 1.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    int rows;\r\n    int columns;\r\n    int loop1;\r\n    int loop2;\r\n    \r\n    printf(\"Enter number of rows: \"); //Input rows from user\r\n    scanf(\"%d\", &rows);\r\n    \r\n    printf(\"Enter number of columns: \"); //Input columns from user\r\n    scanf(\"%d\", &columns);\r\n\r\n    for(loop1 = 1; loop1 <= rows; loop1++)     // Iterate through number of rows \r\n    {\r\n        for(loop2 = 1; loop2 <= columns; loop2++) // Iterate through number of columns\r\n        {\r\n            printf(\"*\"); // Print star for each column \r\n        }\r\n        \r\n        printf(\"\\n\"); // Move to the next line\r\n    }\r\n\r\n    return 0; //Indicate successful execution\r\n}\r\n\n/* --- 20602511_Wong Cheuk Kei/20602511_Wong Cheuk Kei/Question 2.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    int num1, num2, num3; //Declare variables\r\n    \r\n    printf(\"Enter three integers separated by spaces: \");\r\n    scanf(\"%d %d %d\", &num1, &num2, &num3 ); //Input three integers from user\r\n    \r\n    int sum = 0; //variable in which sum is stored\r\n    sum = num1 + num2 + num3;\r\n    \r\n    float average = 0; //variable in which average is stored\r\n    average = (float) (num1 + num2 + num3) / 3;\r\n    \r\n    int product = 0;\r\n    product = num1 * num2 * num3;\r\n    \r\n    printf(\"Sum: %d\\n\", sum);\r\n    printf(\"Average: %.2f\\n\", average);\r\n    printf(\"Product: %d\\n\", product);\r\n    \r\n    if (num1 < num2 && num1 < num3) { //finding the largest number in the 3 integers\r\n        printf(\"Smallest: %d\\n\", num1);\r\n    } else if (num2 < num1 && num2 < num3) {\r\n        printf(\"Smallest: %d\\n\", num2);\r\n    } else if (num3 < num1 && num3 < num3) {\r\n        printf(\"Smallest: %d\\n\", num3);\r\n    } else {\r\n        printf(\"Error: May be caused by they are all equal\");\r\n    }\r\n    \r\n    if (num1 > num2 && num1 > num3) { //finding the largest number in the 3 integers\r\n        printf(\"Largest: %d\\n\", num1);\r\n    } else if (num2 > num1 && num2 > num3) {\r\n        printf(\"Largest: %d\\n\", num2);    \r\n    } else if (num3 > num1 && num3 > num2) {\r\n        printf(\"Largest: %d\\n\", num3);\r\n    } else {\r\n        printf(\"Error: May be caused by they are all equal\");\r\n    }\r\n    \r\n    return 0; //Indicate successful execution\r\n}\r\n \n/* --- 20602511_Wong Cheuk Kei/20602511_Wong Cheuk Kei/Question 3.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    \r\n    //Declare Variables\r\n    int productNumber;\r\n    int quantity;\r\n    float weight;\r\n    int discount;\r\n    double price;\r\n    double totalCost = 0.0;\r\n    double finalCost = 0.0;\r\n\r\n    // Input product code from user\r\n    printf(\"Enter the product code (1 for Fruits, 2 for Vegetables, 3 for Dairy Products, 4 for Canned Goods, 0 to exit): \");\r\n    scanf(\"%d\", &productNumber);\r\n\r\n    // Determine price based on product number\r\n    switch (productNumber) {\r\n        case 0:\r\n            printf(\"Exiting...\\n\");\r\n            return 0;\r\n        case 1:\r\n            printf(\"Enter the weight of fruits (in kg): \");\r\n            scanf(\"%f\", &weight);\r\n            printf(\"Enter the price per kg of fruits: \");\r\n            scanf(\"%lf\", &price);\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%d\", &discount);\r\n            break;\r\n        case 2:\r\n            printf(\"Enter the weight of vegetables (in kg): \");\r\n            scanf(\"%f\", &weight);\r\n            printf(\"Enter the price per kg of vegetables: \");\r\n            scanf(\"%lf\", &price);\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%d\", &discount);\r\n            break;\r\n        case 3:\r\n            printf(\"Enter the quantity of dairy products: \");\r\n            scanf(\"%d\", &quantity);\r\n            printf(\"Enter the price per item: \");\r\n            scanf(\"%lf\", &price);\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%d\", &discount);\r\n            break;\r\n        case 4:\r\n            printf(\"Enter the quantity of canned goods: \");\r\n            scanf(\"%d\", &quantity);\r\n            printf(\"Enter the price per item: \");\r\n            scanf(\"%lf\", &price);\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%d\", &discount);\r\n            break;\r\n        default:\r\n            printf(\"Invalid product number. Please enter a number between 1 and 4.\\n\");\r\n            return 1;\r\n    }\r\n\r\n    // Calculate total cost\r\n    if ((productNumber == 1 || productNumber == 2) && discount != 0) {\r\n        totalCost = price * weight;\r\n        finalCost = totalCost * (1 - (discount / 100.0));\r\n        printf(\"The total cost is: %.2lf\\n\", totalCost);\r\n        printf(\"The final cost after applying the discount is: %.2lf\\n\", finalCost);\r\n    } else if ((productNumber == 3 || productNumber == 4) && discount != 0) {\r\n        totalCost = price * quantity;\r\n        finalCost = totalCost * (1 - (discount / 100.0));\r\n        printf(\"The total cost is: %.2lf\\n\", totalCost);\r\n        printf(\"The final cost after applying the discount is: %.2lf\\n\", finalCost);\r\n    } else if ((productNumber == 1 || productNumber == 2) && discount == 0) {\r\n        totalCost = price * weight;\r\n        finalCost = totalCost;\r\n        printf(\"The total cost is: %.2lf\\n\", totalCost);\r\n        printf(\"The final cost after applying the discount is: %.2lf\\n\", finalCost);\r\n    } else if ((productNumber == 3 || productNumber == 4) && discount == 0) {\r\n        totalCost = price * quantity;\r\n        finalCost = totalCost;\r\n        printf(\"The total cost is: %.2lf\\n\", totalCost);\r\n        printf(\"The final cost after applying the discount is: %.2lf\\n\", finalCost);\r\n    }\r\n\r\n    return 0; // Indicate successful execution\r\n}\r\n",
    "feedback": "q1:The program correctly prompts the user for the number of rows and columns and prints a grid of asterisks based on those dimensions. The logic is straightforward and functions as intended.q2:The program correctly reads three integers from the user, calculates their sum, average, and product, and identifies the smallest and largest values. However, there are some logical issues in the conditions for finding the smallest and largest numbers. The implementation meets the basic requirements but has redundant checks for equality in the smallest and largest calculations that could be streamlined.q3:The program correctly prompts the user for product details based on the selected product code and calculates the total cost and final cost after any discounts. The calculations for total cost and final cost are repeated in multiple branches of the if statements. You can simplify the logic by calculating the total cost once and then applying the discount if applicable."
  },
  {
    "student_id": "20581109",
    "code": "",
    "feedback": "q1: The code structure is mostly clear, but the logic inside the nested loop is flawed.q2: The program correctly calculates the sum, average, product, smallest, and largest values, but it uses if statements that could be simplified.q3: While the code successfully calculates costs for fruits, it needs expansion to address all product types and improve variable naming for clarity."
  },
  {
    "student_id": "20720830",
    "code": "\n/* --- 20720830_Chai Chok Yuen/20720830_Chai Chok Yuen/Q1.c --- */\n#include <stdio.h>\r\n\r\nint main(){\r\n    int row,col ;\r\n    //Input rows and columns\r\n    printf(\"Enter the number of rows: \");\r\n    scanf(\"%d\",&row);\r\n    printf(\"Enter the number of columns: \");\r\n    scanf(\"%d\",&col);\r\n    //print \"*\" according to rows and columns from input using nested for loops\r\n    for(int i=0; i<row;i++){\r\n        for(int j=1; j<col;j++){\r\n            printf(\" *\");\r\n        }\r\n        printf(\" *\");\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\n/* --- 20720830_Chai Chok Yuen/20720830_Chai Chok Yuen/Q2.c --- */\n#include <stdio.h>\r\n\r\nint main(){\r\n    int num1,num2,num3;\r\n    //Input 3 integers in one line seperated by spaces\r\n    printf(\"Enter three integers seperated by spaces: \");\r\n    scanf(\"%d%d%d\",&num1,&num2,&num3);\r\n    //Calculate the sum of 3 integers and print output\r\n    int sum= num1+num2+num3;\r\n    printf(\"Sum: %d\\n\",sum);\r\n    //Calculate the average of 3 integers and print output\r\n    double average= sum/3;\r\n    printf(\"Average: %.2f\\n\",average);\r\n    //Calculate the product of 3 integers and print output\r\n    int product = num1*num2*num3;\r\n    printf(\"Product: %d\\n\",product);\r\n\r\n    // Compare 3 integers to get the smallest and the largest\r\n    // Assume and set the maximum and minimum with the first two integers\r\n    int max =num1;\r\n    int min =num2;\r\n    // Compare the first two integers and assign it as minimum and maximum\r\n    if (num1<num2){\r\n        max=num2;\r\n        min=num1;\r\n    }\r\n    //Compare the third number with th assigned minimum and maximum\r\n    if (num3>max){\r\n        max= num3;\r\n    }\r\n    if(num3<min){\r\n        min= num3;\r\n    }\r\n    //print output \r\n    printf(\"Smallest: %d\\n\",min);\r\n    printf(\"Largest: %d\\n\",max);\r\n    return 0;\r\n}\n/* --- 20720830_Chai Chok Yuen/20720830_Chai Chok Yuen/Q3.c --- */\n#include <stdio.h>\r\n\r\nint main(){\r\n    int choice;\r\n    float weight, price,disc,total,final;\r\n    int num;\r\n    //Input the product code\r\n    printf(\"Enter the product code (1 for Fruits, 2 for Vegetables, 3 for Dairy Products, 4 for Canned Goods, 0 to exit): \");\r\n    scanf(\"%d\", &choice);\r\n    //Switch case to proceed with different process with different code input\r\n    switch(choice){\r\n        //Input 1 will lead to processes regarding fruits\r\n        case 1: \r\n            //Input required information\r\n            printf(\"Enter the weight of fruits (in kg): \");\r\n            scanf(\"%f\",&weight);\r\n            printf(\"Enter the price per kg of fruits: \");\r\n            scanf(\"%f\",&price);\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%f\",&disc);\r\n            //Calculation of total cost and final cost\r\n            total = weight*price;\r\n            final= (1-(disc/100))* total;\r\n            //Print output of total cost and final cost\r\n            printf(\"The total cost is: $%.2f\\n\",total);\r\n            printf(\"The final cost after applying the discount is: $%.2f\",final);\r\n            break;\r\n        //Input 2 will lead to processes regarding vegetables\r\n        case 2:\r\n            //Input required information\r\n            printf(\"Enter the weight of vegetables (in kg): \");\r\n            scanf(\"%f\",&weight);\r\n            printf(\"Enter the price per kg of vegetables: \");\r\n            scanf(\"%f\",&price);\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%f\",&disc);\r\n            //Calculation of total cost and final cost\r\n            total = weight*price;\r\n            final= (1-(disc/100))* total;\r\n            //Print output of total cost and final cost\r\n            printf(\"The total cost is: $%.2f\\n\",total);\r\n            printf(\"The final cost after applying the discount is: $%.2f\",final);\r\n            break;\r\n        //Input 3 will lead to processes regarding dairy products\r\n        case 3:\r\n            //Input required information\r\n            printf(\"Enter the quantity of dairy products: \");\r\n            scanf(\"%d\",&num);\r\n            printf(\"Enter the price per item of dairy products: \");\r\n            scanf(\"%f\",&price);\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%f\",&disc);\r\n            //Calculation of total cost and final cost\r\n            total = num*price;\r\n            final= (1-(disc/100))* total;\r\n            //Print output of total cost and final cost\r\n            printf(\"The total cost is: $%.2f\\n\",total);\r\n            printf(\"The final cost after applying the discount is: $%.2f\",final);\r\n            break;\r\n        //Input 4 will lead to processes regarding canned goods\r\n        case 4:\r\n            //Input required information\r\n            printf(\"Enter the quantity of canned goods : \");\r\n            scanf(\"%d\",&num);\r\n            printf(\"Enter the price per item of canned goods: \");\r\n            scanf(\"%f\",&price);\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%f\",&disc);\r\n            //Calculation of total cost and final cost\r\n            total = num*price;\r\n            final= (1-(disc/100))* total;\r\n            //Print output of total cost and final cost\r\n            printf(\"The total cost is: $%.2f\\n\",total);\r\n            printf(\"The final cost after applying the discount is: $%.2f\",final);\r\n            break;\r\n        //Input 0 will lead to exit\r\n        case 0:\r\n            break;\r\n    }\r\n\r\n    return 0;\r\n}\r\n",
    "feedback": "q1:The program prompts the user correctly for the number of rows and columns and attempts to print a grid of asterisks. However, the inner loop starts from 1, which results in one fewer asterisk printed in each row than specified by the user. The correct loop should start from 0 to ensure the right number of asterisks is printed.q2: The program correctly prompts the user for three integers and calculates the sum, average, product, smallest, and largest values. The logic is sound and produces the expected output.q3: The program correctly implements the logic for calculating total costs based on user input for different product types. It effectively uses a switch statement to handle different cases and computes the total and final costs accurately. However, the program does not include a loop to allow multiple entries, which could enhance usability."
  },
  {
    "student_id": "20580127",
    "code": "\n/* --- 20580127_AhmedAbdelhalim/Lab Assesment 1/Q1a.c --- */\n#include<stdio.h>\r\n\r\nint main(){\r\n\r\nint rows;\r\nint columns;\r\nprintf(\"Enter number of rows: \"); //propmpt user to enter num of rows\r\nscanf(\"%d\",&rows);\r\n\r\nprintf(\"Enter number of columns: \"); //prompt user to enter num of columns\r\nscanf(\"%d\",&columns);\r\n\r\nfor(int i=1;i<=rows;++i)\r\n{\r\n    printf(\"\\n* \");\r\n    //nested for loop \r\n    for(int i=2;i<=columns;++i){  //i is = 2 to take into account extra * from rows\r\n\r\n    printf(\" * \");\r\n        }\r\n}\r\n}\r\n\n/* --- 20580127_AhmedAbdelhalim/Lab Assesment 1/Q2.c --- */\n#include<stdio.h>\r\n\r\nint main() {\r\n\r\nint num1,num2,num3;\r\nint sum;\r\nint average;\r\nint product;\r\nint smallest;\r\nint largest;\r\n\r\n\r\nprintf(\"Enter 3 integers separated by space: \"); //enter 3 integers\r\nscanf(\"%d %d %d\",&num1,&num2,&num3);\r\n\r\nsum=num1+num2+num3;\r\naverage=(num1+num2+num3)/3;\r\nproduct=num1*num2*num3;\r\n\r\nprintf(\"\\nSum: %d\",sum);\r\nprintf(\"\\nAverage: %d\",average);\r\nprintf(\"\\nProduct: %d\",product);\r\n\r\n//check for largest\r\nif(num1>=num2 && num1>=num3){\r\n    printf(\"\\nLargest is %d\",num1);\r\n}\r\nelse if(num2>=num1&&num2>=num3){\r\n    printf(\"\\nLargest is %d\",num2);\r\n}\r\nelse if(num3>=num1 && num3>=num2){\r\n    printf(\"\\nLargest is %d\",num3);\r\n}\r\n//check for smallest\r\nif(num1<=num2 && num1<=num3){\r\n    printf(\"\\nSmallest is %d\",num1);\r\n}\r\nelse if(num2<=num1 && num2<=num3){\r\n    printf(\"\\nSmallest is %d\",num2);\r\n}\r\nelse if(num3<=num1 && num3<=num2){\r\n    printf(\"\\nSmallest is %d\",num3);\r\n}\r\n\r\n\r\n\r\n}\n/* --- 20580127_AhmedAbdelhalim/Lab Assesment 1/Q3.c --- */\n#include<stdio.h>\r\n\r\nint main(){\r\n\r\nint productNum;\r\nfloat weight;\r\nfloat pricePerKg;\r\nfloat totalCost;\r\nfloat discountPercentage; \r\nint quantity;\r\nfloat pricePerItem;\r\n\r\n\r\nwhile(1){  //while loop so code keeps looping until user inputs 0 \r\nprintf(\"Enter the product code(1 for fruits, 2 for vegetables, 3 for dairy products, 4 for canned good, 0 to exit): \");\r\nscanf(\"%d\",&productNum );\r\n\r\nif(productNum==0){\r\n    break;\r\n}\r\n\r\nswitch(productNum){\r\n    case 1:\r\n    printf(\"Enter the weight of the fruits (in kg): \");\r\n    scanf(\"%d\",&weight);\r\n    printf(\"Enter the price per kg of fruits: \");\r\n    scanf(\"%f\",&pricePerKg);\r\n    totalCost = weight * pricePerKg;\r\n    printf(\"The total cost is : %.2f\",totalCost);\r\n    break;\r\n\r\n    case 2: \r\n    printf(\"Enter the weight of the Vegetables (in kg): \");\r\n    scanf(\"%d\",&weight);\r\n    printf(\"Enter the price per kg of vegetables: \");\r\n    scanf(\"%f\",&pricePerKg);\r\n    totalCost = weight * pricePerKg;\r\n    printf(\"The total cost is : %.2f\",totalCost);\r\n    break;\r\n\r\n    case 3:\r\n    printf(\"Enter the quantity of dairy products: \");\r\n    scanf(\"%d\", &quantity);\r\n    printf(\"Enter the price per item for dairy products: \");\r\n    scanf(\"%f\", &pricePerItem);\r\n    totalCost = quantity * pricePerItem;\r\n    printf(\"Total cost for Dairy Products: $%.2f\\n\", totalCost);\r\n    break;\r\n\r\n    case 4: \r\n    printf(\"Enter the quantity of canned goods: \");\r\n    scanf(\"%d\", &quantity);\r\n    printf(\"Enter the price per item for canned goods: \");\r\n    scanf(\"%f\", &pricePerItem);\r\n    totalCost = quantity * pricePerItem;\r\n    printf(\"Total cost for Canned Goods: $%.2f\\n\", totalCost);\r\n    break;\r\n\r\n    default:\r\n    printf(\"Invalid product type. Please enter a valid code.\\n\");\r\n    continue;\r\n\r\n        }\r\n //end of while loop\r\n}\r\n\r\nfloat discount;\r\nfloat finalCost;\r\nprintf(\"Enter discount percentage (0 if no discount): \");\r\n        scanf(\"%f\", &discount);\r\n\r\nfinalCost = totalCost * (discount / 100);\r\n\r\nprintf(\"Final cost after %.2f%% discount: $%.2f\\n\", discount, finalCost);\r\n    \r\n\r\n    return 0;\r\n\r\n}\r\n\r\n\r\n",
    "feedback": "q1:The code effectively prints a grid of asterisks, but ensure that loop variables are uniquely named to avoid conflicts. q2: The code effectively implements the required functionality, but to improve accuracy, consider calculating the average using floating-point arithmetic (e.g., float average = (num1 + num2 + num3) / 3.0;). This would ensure that the average is displayed correctly. The code for calculating largest and smallest can be streamlined further.q3:  The program does not correctly handle the discount application, as it should be calculated based on the most recent total cost from the product type selected. Additionally, the output for total costs is not consistent, as it should be displayed every time a cost is calculated."
  },
  {
    "student_id": "20611298",
    "code": "",
    "feedback": "q1:The program correctly prompts the user for the number of rows and columns and prints a grid of asterisks according to the specified dimensions. The logic is sound, and the output is as expected.q2:The program accurately prompts the user for three integers and computes the sum, average, product, smallest, and largest values. The calculations are implemented correctly, and the outputs are formatted well.The current logic does not account for the case where two or more numbers may be equal. This can lead to incorrect outputs. Using <= and >= instead of < and > would make it more robustq3:The program correctly implements a menu-driven system that allows users to input product details, calculate total costs, and apply discounts for various product types. The calculations for total and final costs are accurate.The calculations for total cost and final cost are repeated across cases. This could be refactored into a separate function to avoid redundancy."
  },
  {
    "student_id": "20613250",
    "code": "\n/* --- 20613250_Eunice Lee Ying Yun/20613250_Eunice Lee Ying Yun/q1.c --- */\n#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n    int row, col; // row and column\r\n    \r\n    //request number of rows\r\n    printf(\"Enter the number of rows: \");\r\n    scanf(\"%d\", &row);\r\n    //request number of columns\r\n    printf(\"Enter the number of columns: \");\r\n    scanf(\"%d\", &col);\r\n    \r\n    for (row; row>0; --row){ //repeat until all rows have been displayed, no remainding row\r\n        \r\n        for (int count = col; count>0; --count){ //repeat until all columns on that row have been displayed, no remainding column\r\n            printf(\"* \");\r\n        }\r\n\r\n        printf(\"\\n\"); //newline for next row\r\n    }\r\n\r\n    return 0;\r\n}\n/* --- 20613250_Eunice Lee Ying Yun/20613250_Eunice Lee Ying Yun/q2.c --- */\n#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n    int num1, num2, num3; //3 integer\r\n    \r\n    //request 3 integer separated by spaces\r\n    printf(\"Enter three integers separated by spaces: \");\r\n    scanf(\"%d%d%d\", &num1, &num2, &num3);\r\n\r\n    printf(\"Sum: %d\\n\", num1+num2+num3); // sum of integers\r\n    printf(\"Average: %.2f\\n\", (double)((num1+num2+num3)/3)); // average of integers\r\n    printf(\"Product: %d\\n\", num1*num2*num3); // product of integers\r\n    \r\n    //compare for the smallest integer\r\n    if ((num1<num2) && (num1<num3)){ //check num1 is smallest\r\n        printf(\"Smallest: %d\\n\", num1);\r\n    }\r\n    else{\r\n        if (num2<num3){ //check num2 is smallest\r\n            printf(\"Smallest: %d\\n\", num2);\r\n        }\r\n        else{ //num3 is smallest\r\n            printf(\"Smallest: %d\\n\", num3);\r\n        }\r\n    }\r\n    \r\n    //compare for the largest integer\r\n    if ((num1>num2) && (num1>num3)){ //check num1 is largest\r\n        printf(\"Largest: %d\\n\", num1);\r\n    }\r\n    else{\r\n        if (num2>num3){ //check num2 is largest\r\n            printf(\"Largest: %d\\n\", num2);\r\n        }\r\n        else{ //num3 is largest\r\n            printf(\"Largest: %d\\n\", num3);\r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}\n/* --- 20613250_Eunice Lee Ying Yun/20613250_Eunice Lee Ying Yun/q3.c --- */\n#include <stdio.h>\r\n\r\n//function to count discount percentage, initial cost and final cost after discount\r\nint counting(double quan, double price){ //require quantity and price\r\n    int disPer;\r\n    double iniCost, finCost;\r\n    \r\n    //request discount percentage\r\n    printf(\"Enter discount percentage (or 0 for no discount): \"); \r\n    scanf(\"%d\", &disPer);\r\n\r\n    //Calculation   \r\n    iniCost = (double)price * quan; // calculate initial cost\r\n    disPer = 100-disPer; // calculate the discount percentage\r\n    finCost = (double)iniCost * disPer /100; // calculate final cost after discount\r\n\r\n    //display initial cost and final cost after discount    \r\n    printf(\"The total cost is: $%.2f\\n\", iniCost);\r\n    printf(\"The final cost after applying the discount is: $%.2f\\n\\n\", finCost);\r\n\r\n    return 0;\r\n}\r\n\r\n//Main program\r\nint main(void)\r\n{\r\n    // product code set as 1\r\n    int proCode = 1;\r\n    double price, quan; //price and quantity\r\n    \r\n    while (proCode != 0){ //loop if product code not equal to 0\r\n\r\n        //request product code\r\n        printf(\"Enter the product code (1 for Fruits, 2 for Vegetables, 3 for Dairy Products, 4 for Canned Goods, 0 to exit): \");\r\n        scanf(\"%d\", &proCode);\r\n        \r\n        switch (proCode){\r\n            case 1:  // fruit\r\n                printf(\"Enter the weight of fruits (in kg): \");\r\n                scanf(\"%lf\", &quan);\r\n                printf(\"Enter the price per kg of fruits: \");\r\n                scanf(\"%lf\", &price);\r\n                counting(quan, price);\r\n                break;\r\n            case 2: //vegetables\r\n                printf(\"Enter the weight of vegetables (in kg): \");\r\n                scanf(\"%lf\", &quan);\r\n                printf(\"Enter the price per kg of vegetables: \");\r\n                scanf(\"%lf\", &price);\r\n                counting(quan, price);\r\n                break;\r\n            case 3: // dairy product\r\n                printf(\"Enter the quantity of dairy product (item): \");\r\n                scanf(\"%lf\", &quan);\r\n                printf(\"Enter the price per item of dairy product: \");\r\n                scanf(\"%lf\", &price);\r\n                counting(quan, price);\r\n                break;\r\n            case 4: // canned goods\r\n                printf(\"Enter the quantity of canned goods (item): \");\r\n                scanf(\"%lf\", &quan);\r\n                printf(\"Enter the price per item of canned goods: \");\r\n                scanf(\"%lf\", &price);\r\n                counting(quan, price);\r\n                break;\r\n            case 0: // stop the loop\r\n                break;\r\n            default: // wrong input alert\r\n                printf(\"Invalid input\\n\");\r\n                break;\r\n        }\r\n        \r\n        //quit the while loop\r\n        if (proCode == 0){\r\n            break;\r\n        }\r\n\r\n    }\r\n    \r\n    return 0;\r\n}",
    "feedback": "q1:The program correctly prompts the user for the number of rows and columns and uses nested loops to print a grid of asterisks based on that input. The logic is sound and produces the expected output.q2:The average calculation should be performed as a floating-point operation to avoid integer division. Currently, casting only the final result may lead to incorrect averages if the sum is not perfectly divisible by 3. A better approach would be to cast the sum before divisionq3:The program correctly implements a menu-driven system that allows users to input product details, calculate initial and final costs based on discounts, and handle different product types. The logic is sound, and the calculations are performed accurately.The calculation for the final cost after applying the discount could be made clearer. The line disPer = 100 - disPer; might be confusing. It's better to directly calculate the discount amount and apply it, which could improve readability."
  },
  {
    "student_id": "20717304",
    "code": "\n/* --- 20717304_Eashwar/20717304_Eashwar/Q1.c --- */\n#include <stdio.h>  \r\n\r\nint main() {  \r\n    int rows = 0; \r\n    int clmns = 0;\r\n\r\n    printf(\"Enter the number of rows : \");  \r\n    scanf(\"%d\",&rows);                              //Takes user input for rows and assings it to variable\r\n    printf(\"Enter the number of coloumns : \");\r\n    scanf(\"%d\", &clmns);                            //Takes user input for coloumns and assings it to variable\r\n\r\n    for(int i=0; i<rows; i++)                      // For loop to iterate through rows\r\n    {  \r\n        for(int j=0; j<clmns; j++)                 // For loop to iterate through coloumns\r\n        {  \r\n            printf(\"*\");  \r\n        }  \r\n        printf(\"\\n\");                              // Goes to a new line after every coloumn\r\n    }  \r\n      \r\n    return 0;  \r\n}  \r\n\n/* --- 20717304_Eashwar/20717304_Eashwar/Q2.c --- */\n#include <stdio.h>\r\n\r\nint main(){\r\n    int a;\r\n    int b;\r\n    int c;\r\n    printf(\"Enter three integers seperated by a space \");\r\n    scanf(\"%d%d%d\", &a, &b, &c);                            // Reads user input and saves it to 3 different variables\r\n    \r\n    int sum;                   // Adds the three integers\r\n    sum = a + b + c;\r\n    printf(\"Sum : %d\\n\", sum);\r\n\r\n    int avg;                   // Finds the average of the three integers\r\n    avg = sum/3;\r\n    printf(\"Average : %d\\n\", avg);\r\n\r\n    int prod;                  // Multiplies the three integers\r\n    prod = a * b * c;\r\n    printf(\"Product : %d\\n\", prod);\r\n\r\n    int small = a;             // Finds the smallest of the three integers\r\n    if(small > b)              // Compares the integers one by one to a variable named small which is initially assigned to the first integer\r\n    {\r\n        small = b;\r\n    }\r\n    if(small > c)\r\n    {\r\n        small = c;\r\n    }\r\n    printf(\"Smallest : %d\\n\", small);\r\n\r\n    int big = a;               // Finds the biggest of the three integers\r\n    if(big < b)                // Compares the integers one by one to a variable named small which is initially assigned to the first integer\r\n    {\r\n        big = b;\r\n    }\r\n    if (big < c)\r\n    {\r\n        big = c;\r\n    }\r\n    printf(\"Largest : %d\\n\", big);\r\n}\n/* --- 20717304_Eashwar/20717304_Eashwar/Q3.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    int ptype;\r\n    float weight;\r\n    int quan;\r\n    float ppk;                // Initialise required variables\r\n    float ppp;\r\n    float ttc;\r\n    float disc;\r\n    float fc;\r\n\r\n    while(1) {\r\n        printf(\"\\nEnter a product type code (1 for Fruits, 2 for Vegetables, 3 for Dairy Products, 4 for Canned Goods, 0 to exit): \");\r\n        scanf(\"%d\", &ptype);            //Start a loop\r\n\r\n        if(ptype == 0) {\r\n            break;                     // Exits program when 0 is entered\r\n        }\r\n\r\n        switch(ptype) {                                      // Switch statement is initilaised for each case\r\n            case 1:\r\n                printf(\"Enter weight in kg: \");              \r\n                scanf(\"%f\", &weight);\r\n                printf(\"Enter price per Kg of Fruits : \");   \r\n                scanf(\"%f\", &ppk);\r\n                ttc = ppk * weight;                         // Calculates total cost in each case\r\n                break;\r\n\r\n            case 2:\r\n                printf(\"Enter weight in kg: \");\r\n                scanf(\"%f\", &weight);\r\n                printf(\"Enter price per Kg of Vegetables : \");\r\n                scanf(\"%f\", &ppk);\r\n                ttc = ppk * weight;\r\n                break;\r\n\r\n            case 3:\r\n                printf(\"Enter quantity: \");\r\n                scanf(\"%d\", &quan);\r\n                printf(\"Enter price per product : \");\r\n                scanf(\"%f\", &ppp);\r\n                ttc = ppp * quan;\r\n                break;\r\n\r\n            case 4:\r\n                printf(\"Enter quantity: \");\r\n                scanf(\"%d\", &quan);\r\n                printf(\"Enter price per can : \");\r\n                scanf(\"%f\", &ppp);\r\n                ttc = ppp * quan;\r\n                break;\r\n\r\n            default:\r\n                printf(\"Invalid product code.\\n\");\r\n                continue;                              //Goes out of the loop when an ivalid input is given\r\n        }\r\n\r\n        printf(\"Enter discount percentage (if any; 0 if no discount): \");\r\n        scanf(\"%f\", &disc);                            // Discount calculation\r\n\r\n        if(disc > 0)\r\n        {\r\n            fc = ttc - (ttc * (disc / 100));          // Subtracting the discount amount for total cost\r\n        }\r\n        else\r\n        {\r\n            fc = ttc;                                 // Declaring final cost when there is no discount\r\n        } \r\n        printf(\"The total cost is : %.2f\\n\", ttc);                  \r\n        printf(\"The final cost is after discount is : %.2f\\n\", fc);   //Printing cost before and after discount\r\n    }\r\n\r\n    return 0;\r\n}",
    "feedback": "q1:The program correctly prompts the user for the number of rows and columns and uses nested loops to print a grid of asterisks based on that input. The logic is sound and produces the expected output.q2:The program correctly prompts the user for three integers and performs calculations to find the sum, average, product, smallest, and largest values. The variable avg is declared as an int, which can lead to truncation of decimal values. It would be better to declare it as a float.q3:The program effectively implements a menu-driven system that allows users to select different product types and input relevant data for calculating total costs and discounts. The logic is sound, and calculations are performed correctly for each product type."
  },
  {
    "student_id": "20701571",
    "code": "\n/* --- 20701571_Abdullah Usmani/20701571_Abdullah Usmani/Q1.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    int rows = 0;\r\n    int columns = 0;\r\n    char i,j = '*';\r\n    printf(\"Enter the number of rows: \");\r\n    scanf(\"%d\", &rows);\r\n\r\n    printf(\"Enter the number of columns: \");\r\n        scanf(\"%d\", &columns);\r\n\r\n    for(int i = 1; i <= rows; ++i)\r\n    {\r\n        printf(\"%d\", i);\r\n        for (int j = 1; j <= columns; ++j)\r\n        {\r\n         printf(\"%d\", j);\r\n        }\r\n        printf(\"\\n\"); // This is necessary as it gives the new line everytime a row ends.\r\n\r\n    }\r\n    \r\n\r\n    return 0;\r\n}\n/* --- 20701571_Abdullah Usmani/20701571_Abdullah Usmani/Q2.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    int num1, num2, num3 = 0;\r\n\r\n    printf(\"Enter three intgers separated by space: \");\r\n    scanf(\"%d\", &num1, &num2, &num3);\r\n\r\n    int sum = num1 + num2 + num3;\r\n    printf(\"Sum: %d\", sum);\r\n    \r\n\r\n\r\n    return 0;\r\n}\n/* --- 20701571_Abdullah Usmani/20701571_Abdullah Usmani/Q3.c --- */\n#include <stdio.h>\r\n\r\nint main() {\r\n    float items = 0;\r\n    float price;\r\n    float discount;\r\n    float total;\r\n    float final_cost = (1-discount)*total;\r\n    printf(\"Enter the Product code(1 for fruits, 2 for vegetables, 3 for Diary products, 4 for Canned goods, 0 to exit): \");\r\n    scanf(\"%d\", &items);\r\n\r\n   if(items == 1) {\r\n   printf(\"Enter the weight of the fruit: \");\r\n   }\r\n   else if(items == 2) {\r\n        printf(\"Enter the weight of the Vegetables: \");\r\n   }\r\n    else if(items == 3) {\r\n        printf(\"Enter fixed price per item of your diary product: \");\r\n    }\r\n    else if(items == 4){\r\n        printf(\"Enter fixed price per item on quantity: \");\r\n    }\r\n    else {}\r\n\r\n\r\n\r\n    return 0;\r\n}",
    "feedback": "q1:The code does not meet the task requirements, as it incorrectly prints indices instead of a grid of asterisksq2: The code fails to correctly read three integers and does not implement the full set of required calculationsq3: The code does not implement the required functionality for calculating costs or applying discounts"
  },
  {
    "student_id": "20722371",
    "code": "\n/* --- 20722371_ARFAN SHAFEY BIN KAMAL AZIZI/Q1.c --- */\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int r, c, a, b;\r\n\r\n    printf(\"Enter number of rows :\");\r\n    scanf(\"%d\", &r); //input number of rows\r\n\r\n    printf(\"Enter number of columns :\");\r\n    scanf(\"%d\", &c); //input number of columns\r\n\r\n    for(a = 1; a <= r ; a++) //iterate through each row\r\n    {\r\n        for(b = 1; b <= c ; b++) //iterate through each column\r\n        { \r\n            printf(\"*\"); //print an asterisk for each column\r\n        }\r\n\r\n        printf(\"\\n\"); //move on to the next row\r\n    }\r\n\r\n    return 0;\r\n}\r\n\n/* --- 20722371_ARFAN SHAFEY BIN KAMAL AZIZI/Q2.c --- */\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int num1, num2, num3, sum, prod;\r\n    float avg;\r\n\r\n    printf(\"Enter three integers separated by spaces : \");\r\n    scanf(\"%d %d %d\", &num1, &num2, &num3);\r\n\r\n    sum = num1 + num2 + num3; //sum of the 3 integers\r\n    printf(\"\\nSum : %d\", sum);\r\n\r\n    avg = (num1 + num2 + num3)/3; //average of the 3 integers\r\n    printf(\"\\nAverage : %f\", avg);\r\n\r\n    prod = num1 * num2 * num3; //product of the 3 integers\r\n    printf(\"\\nProduct : %d\", prod);\r\n\r\n    if(num1<num2) //finding smallest number in 3 integers\r\n        {\r\n            if(num2<num3)\r\n                printf(\"\\nSmallest : %d\", num1);\r\n            else\r\n                printf(\"\\nSmallest : %d\", num3);\r\n        }\r\n    else\r\n    {\r\n        if(num2<num3)\r\n            printf(\"\\nSmallest : %d\", num2);\r\n        else\r\n            printf(\"\\nSmallest : %d\", num3);\r\n    }\r\n\r\n    if(num1>num2) //finding biggest number in 3 integers\r\n    {\r\n        if(num2>num3)\r\n            printf(\"\\nBiggest : %d\", num1);\r\n        else\r\n            printf(\"\\nBiggest : %d\", num3);\r\n    }\r\n    else\r\n    {\r\n        if(num2>num3)\r\n            printf(\"\\nBiggest : %d\", num2);\r\n        else\r\n            printf(\"\\nBiggest : %d\", num3);\r\n    }\r\n\r\n    return 0;\r\n}\r\n\n/* --- 20722371_ARFAN SHAFEY BIN KAMAL AZIZI/Q3.c --- */\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int code, weight, price, discount;\r\n    float cost, disccost;\r\n\r\n    printf(\"Enter the product code (1 for Fruits, 2 for Vegetables, 3 for Dairy Products, 4 for Canned Goods, 0 to Exit): \");\r\n    scanf(\"%d\", &code); //input product code according to destination\r\n\r\n    if (code == 1) //fruits\r\n    {\r\n        printf(\"\\nEnter the weight of fruits (in kg) : \"); \r\n        scanf(\"%d\", &weight); //input weight\r\n\r\n        printf(\"\\nEnter the price per kg of fruits : \");\r\n        scanf(\"%d\", &price); //input price\r\n\r\n        printf(\"\\nEnter the discount percentage (0 for no discount) : \");\r\n        scanf(\"%d\", &discount); //input discount percentage\r\n\r\n        cost = weight * price; //formula to obtain cost\r\n        disccost = cost - (discount / 100.0) * cost; //formula to obtain discounted cost\r\n\r\n        printf(\"\\nThe total cost is : $%.2f\", cost); //cost output\r\n        printf(\"\\nThe total discounted cost is : $%.2f\", disccost); //discounted cost output\r\n    }\r\n    else if (code == 2) //vegetables\r\n    {\r\n        printf(\"\\nEnter the weight of vegetables (in kg) : \");\r\n        scanf(\"%d\", &weight); //input weight\r\n\r\n        printf(\"\\nEnter the price per kg of vegetables : \");\r\n        scanf(\"%d\", &price); //input price \r\n\r\n        printf(\"\\nEnter the discount percentage (0 for no discount) : \");\r\n        scanf(\"%d\", &discount); //input discount percentage\r\n\r\n        cost = weight * price; //formula to obtain cost\r\n        disccost = cost - (discount / 100.0) * cost; //formula to obtain discounted cost\r\n\r\n        printf(\"\\nThe total cost is : $%.2f\", cost); //cost output\r\n        printf(\"\\nThe total discounted cost is : $%.2f\", disccost); //discounted cost output\r\n    }\r\n    else if (code == 3) //dairy products\r\n    {\r\n        printf(\"\\nEnter the weight of dairy products (in kg) : \");\r\n        scanf(\"%d\", &weight); //input weight\r\n\r\n        printf(\"\\nEnter the price per kg of dairy products : \");\r\n        scanf(\"%d\", &price); //input price\r\n\r\n        printf(\"\\nEnter the discount percentage (0 for no discount): \");\r\n        scanf(\"%d\", &discount); //input discount percentage\r\n\r\n        cost = weight * price; //formula to obtain cost\r\n        disccost = cost - (discount / 100.0) * cost; //formula to obtain discounted cost\r\n\r\n        printf(\"\\nThe total cost is : $%.2f\", cost); //cost output\r\n        printf(\"\\nThe total discounted cost is : $%.2f\", disccost); //discounted cost output\r\n    }\r\n    else if (code == 4) //canned goods\r\n    {\r\n        printf(\"\\nEnter the weight of canned goods (in kg) : \");\r\n        scanf(\"%d\", &weight); //input weight\r\n\r\n        printf(\"\\nEnter the price per kg of canned goods : \");\r\n        scanf(\"%d\", &price); //input price\r\n\r\n        printf(\"\\nEnter the discount percentage (0 for no discount): \");\r\n        scanf(\"%d\", &discount); //input discount percentage\r\n\r\n        cost = weight * price; //formula to obtain cost\r\n        disccost = cost - (discount / 100.0) * cost; //formula to obtain discounted cost\r\n\r\n        printf(\"\\nThe total cost is : $%.2f\", cost); //cost output\r\n        printf(\"\\nThe total discounted cost is : $%.2f\", disccost); //discounted cost output\r\n    }\r\n    else if (code == 0) //exit\r\n    {\r\n        printf(\"\\nHave a nice day!\");\r\n    }\r\n    else //invalid code\r\n    {\r\n        printf(\"\\nInvalid code entered.\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n",
    "feedback": "q1:The program correctly prints a grid of asterisks based on user-defined rows and columns. The nested loops function as intended, producing the expected output.q2:the logic for determining the smallest and largest numbers could be simplified for clarity.q3:No switch-case logic implementation. there is considerable repetition across the product types. This could be simplified to reduce redundancy."
  },
  {
    "student_id": "20621408",
    "code": "\n/* --- 20621408_Charles Dan Zhi Jhet/20621408_Charles Dan Zhi Jhet/Q1.c --- */\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int row, col;\r\n\r\n    printf(\"Enter the number of rows: \");\r\n    scanf(\"%d\", &row);\r\n    printf(\"Enter the number of columns: \");\r\n    scanf(\"%d\", &col);\r\n\r\n    for(int i = 0; i < row; i++)            // iterate over each row, and print \\n\r\n    {\r\n        for(int j = 0; j < col; j++)        // iterate over each column, and print *\r\n        {\r\n            printf(\"*\");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\n/* --- 20621408_Charles Dan Zhi Jhet/20621408_Charles Dan Zhi Jhet/Q2.c --- */\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int sum, product = 1, value1, value2, value3, smallest, largest;\r\n    double average;\r\n\r\n    printf(\"Enter three integers seperated by spaces: \");\r\n    scanf(\"%d %d %d\", &value1, &value2, &value3);\r\n\r\n    //SUM\r\n    sum = value1 + value2 + value3;\r\n    printf(\"SUM: %d\\n\", sum);\r\n\r\n    // AVERAGE\r\n    average = (double)sum / 3;\r\n    printf(\"Average: %.2lf\\n\", average);\r\n\r\n    // PRODUCT\r\n    product = value1 * value2 * value3; \r\n    printf(\"Product: %d\\n\", product);\r\n\r\n\r\n    // Largest among all 3 values\r\n    if(value1 > value2)\r\n    {\r\n      if(value1 > value3)\r\n        largest = value1;\r\n      else\r\n        largest = value3;\r\n    }\r\n    else\r\n    {\r\n      if(value2 > value3)\r\n        largest = value2;\r\n      else\r\n        largest = value3;\r\n    }\r\n\r\n    // Small among all 3 values\r\n    if(value1 < value2)\r\n    {\r\n      if(value1 < value3)\r\n        smallest = value1;\r\n      else\r\n        smallest = value3;\r\n    }\r\n    else\r\n    {\r\n      if(value2 < value3)\r\n        smallest = value2;\r\n      else\r\n        smallest = value3;\r\n    }\r\n\r\n    //Display smallest number\r\n    printf(\"Smallest: %d\\n\",smallest);\r\n\r\n    //Display Largest Number\r\n    printf(\"largest: %d\\n\",largest);\r\n\r\n    return 0;\r\n}\n/* --- 20621408_Charles Dan Zhi Jhet/20621408_Charles Dan Zhi Jhet/Q3.c --- */\n#include <stdio.h>\r\n#include <stdbool.h>\r\n\r\nint main()\r\n{\r\n    bool loop = true;\r\n\r\n    while(loop) \r\n    {\r\n        int choice, weight = 0, quantity = 0, discount = 0;\r\n        double price = 0.0, totalCost = 0.0, finalCost = 0.0;\r\n\r\n        printf(\"Enter the product code (1 for Fruits, 2 for Vegetables, 3 for Dairy Products, 4 for Canned Goods, 0 to Exit): \");\r\n        scanf(\"%d\", &choice);\r\n\r\n        switch(choice)\r\n        {\r\n            case 1:         \r\n                printf(\"Enter the weight of fruits (in kg): \");\r\n                scanf(\"%d\", &weight);\r\n                printf(\"Enter the price per kg of fruits: \");\r\n                scanf(\"%lf\", &price);\r\n                break;\r\n\r\n            case 2:\r\n                printf(\"Enter the weight of vegetables (in kg): \");\r\n                scanf(\"%d\", &weight);\r\n                printf(\"Enter the price per kg of vegetables: \");\r\n                scanf(\"%lf\", &price);\r\n                break;\r\n\r\n            case 3:\r\n                printf(\"Enter the quantity of dairy products: \");\r\n                scanf(\"%d\", &quantity);\r\n                price = 4.50;   \r\n                break;\r\n\r\n            case 4:\r\n                printf(\"Enter the quantity of canned goods: \");\r\n                scanf(\"%d\", &quantity);\r\n                price = 5.00;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if(choice == 0)\r\n        {\r\n            printf(\"Exited. Thank you.\\n\");\r\n            loop = false;\r\n        }\r\n        else if (weight != 0)                                               // if user choice is a item that uses weight to calculate\r\n        {\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%d\", &discount);\r\n            totalCost = weight * price;\r\n            printf(\"The total cost is: $%.2lf\\n\", totalCost);\r\n            finalCost = ((100.0 - discount) / 100.0) * totalCost;\r\n            printf(\"The final cost after applying the discount is: $%.2lf\\n\", finalCost);\r\n            printf(\"\\n\");\r\n        }\r\n        else if (quantity != 0)                                             // if user choice is a item that uses quantity to calculate\r\n        {\r\n            printf(\"Enter discount percentage (or 0 for no discount): \");\r\n            scanf(\"%d\", &discount);\r\n            totalCost = quantity * price;\r\n            printf(\"The total cost is: $%.2lf\\n\", totalCost);\r\n            finalCost = ((100.0 - discount) / 100.0) * totalCost;\r\n            printf(\"The final cost after applying the discount is: $%.2lf\\n\", finalCost);\r\n            printf(\"\\n\");\r\n        }\r\n        else \r\n        {\r\n            printf(\"Enter only integers from 0 to 4.\\n\");\r\n        }        \r\n    }\r\n\r\n    return 0;\r\n}",
    "feedback": "q1: The program correctly prompts the user for the number of rows and columns, then prints a grid of asterisks as intended. The logic for the nested loops functions correctly, producing the expected output format.q2:The program correctly calculates the sum, average, product, smallest, and largest of three integers based on user input. The calculations and logic for determining the smallest and largest values are accurate.  the logic for finding the smallest and largest values could be simplified.q3:The program effectively prompts the user for a product type and gathers the necessary information to compute the total cost. It correctly handles the calculation of costs based on weight or quantity and applies a discount if provided. The exit condition works well. The default case in the switch statement should inform the user that the input was invalid. This can help guide the user to enter correct product codes.You can streamline the discount application logic."
  },
  {
    "student_id": "20722250",
    "code": "\n/* --- 20722250_Adrian Lee Zhen Hom/20722250_Adrian Lee Zhen Hom/Q1.c --- */\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int row, column;\r\n\r\n    //prompt and read number of rows from user\r\n    printf(\"Enter the number of rows: \");\r\n    scanf(\"%d\", &row);\r\n\r\n    //prompt and read number of columns from user\r\n    printf(\"Enter the number of columns: \");\r\n    scanf(\"%d\", &column);\r\n\r\n    //loop row\r\n    for(int i=1; i<=row; ++i)\r\n    {\r\n        //loop column\r\n        for(int j=1; j<=column; ++j)\r\n        {\r\n            //print asterisk\r\n            printf(\"*\");\r\n        }\r\n\r\n        //print newline\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\n/* --- 20722250_Adrian Lee Zhen Hom/20722250_Adrian Lee Zhen Hom/Q2.c --- */\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int num1, num2, num3;\r\n    int sum = 0;\r\n    double average;\r\n    int product;\r\n    int min, max;\r\n\r\n    //prompt and read 3 integers from user\r\n    printf(\"Enter three integers separated by spaces: \");\r\n    scanf(\"%d %d %d\", &num1, &num2, &num3);\r\n    \r\n    //calculate sum\r\n    sum = num1 + num2 + num3;\r\n    \r\n    //calculate average\r\n    average = (double) sum / 3;\r\n\r\n    //calculate product\r\n    product = num1 * num2 * num3;\r\n    \r\n    //find smallest integer\r\n    if(num1<num2 && num1<num3)\r\n    {\r\n        min = num1;\r\n    }\r\n    else if(num2<num1 && num2<num3)\r\n    {\r\n        min = num2;\r\n    }\r\n    else if(num3<num1 && num3<num2)\r\n    {\r\n        min = num3;\r\n    }\r\n\r\n    //find largest integer\r\n    if(num1>num2 && num1>num3)\r\n    {\r\n        max = num1;\r\n    }\r\n    else if(num2>num1 && num2>num3)\r\n    {\r\n        max = num2;\r\n    }\r\n    else if(num3>num1 && num3>num2)\r\n    {\r\n        max = num3;\r\n    }\r\n\r\n    //display result\r\n    printf(\"Sum: %d\\n\", sum);\r\n    printf(\"Average: %.2f\\n\", average);\r\n    printf(\"Product: %d\\n\", product);\r\n    printf(\"Smallest: %d\\n\", min);\r\n    printf(\"Largest: %d\\n\", max); \r\n\r\n    return 0;\r\n}\n/* --- 20722250_Adrian Lee Zhen Hom/20722250_Adrian Lee Zhen Hom/Q3.c --- */\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int product_code;\r\n    double weight;\r\n    int quantity;\r\n    double price;\r\n    double discount_percentage;\r\n    double total_cost;\r\n    double final_cost;\r\n\r\n    printf(\"Product codes:\\n\");\r\n    printf(\"1. Fruits\\n\");\r\n    printf(\"2. Vegetables\\n\");\r\n    printf(\"3. Dairy Products\\n\");\r\n    printf(\"4. Canned Goods\\n\");\r\n    printf(\"0. Exit\\n\");\r\n\r\n    while (1)\r\n    {\r\n        //prompt and read product code from user\r\n        printf(\"Enter product code (1-4), enter 0 to exit: \");\r\n        scanf(\"%d\", &product_code);\r\n        fflush(stdin);\r\n\r\n        //exit condition\r\n        if(product_code == 0)\r\n        {\r\n            break;\r\n        }\r\n\r\n        //prompt and read necessary info from user using switch\r\n        switch(product_code)\r\n        {\r\n            case 1:\r\n                printf(\"Enter weight of fruits (in kg): \");\r\n                scanf(\"%f\", &weight);\r\n                \r\n                printf(\"Enter price per kg of fruits: \");\r\n                scanf(\"%f\", &price);\r\n\r\n                total_cost = weight * price;\r\n                break;\r\n\r\n            case 2:\r\n                printf(\"Enter weight of vegetables (in kg): \");\r\n                scanf(\"%f\", &weight);\r\n\r\n                printf(\"Enter price per kg of vegetables: \");\r\n                scanf(\"%f\", &price);\r\n\r\n                total_cost = weight * price;\r\n                break;\r\n\r\n            case 3:\r\n                printf(\"Enter quantity of dairy products: \");\r\n                scanf(\"%d\", &quantity);\r\n\r\n                printf(\"Enter price per unit of dairy products: \");\r\n                scanf(\"%f\", &price);\r\n\r\n                total_cost = quantity * price;\r\n                break;\r\n\r\n            case 4:\r\n                printf(\"Enter quantity of canned goods: \");\r\n                scanf(\"%d\", &quantity);\r\n\r\n                printf(\"Enter price per unit of canned goods: \");\r\n                scanf(\"%f\", &price);\r\n\r\n                total_cost = quantity * price;\r\n                break;\r\n\r\n            default:\r\n                printf(\"Invalid product code. Please enter a number between 1 and 4, or 0 to exit.\");\r\n                continue;  // skip this iteration and prompt user for input again since invalid input\r\n        }\r\n\r\n        //prompt and read discount from user\r\n        printf(\"Enter discount percentage (or 0 for no discount): \");\r\n        scanf(\"%f\", &discount_percentage);\r\n\r\n        //convert discount percentage to decimal form\r\n        double discount_decimal = discount_percentage / 100;\r\n\r\n        //calculate final cost after discount\r\n        final_cost = total_cost * (1 - discount_decimal);\r\n\r\n        //display results\r\n        printf(\"Total cost is: $%.2f\\n\", total_cost);\r\n        printf(\"Final cost after applying discount is: $%.2f\\n\\n\", final_cost);\r\n    }\r\n\r\n    return 0;\r\n}",
    "feedback": "q1:The program successfully prints a grid of asterisks based on user-defined rows and columns.q2:The code effectively implements the required functionality and demonstrates a solid understanding of conditional statements for determining the order of numbers. It could be slightly improved by consolidating the logic for finding the minimum and maximum values into a single loop for efficiency, but this is a minor point. q3:The program effectively calculates the total and final costs based on user input for different product types and applies discounts correctly. The exit condition is handled well.\n    The scanf format specifiers for price and weight should use \"%lf\" for double instead of \"%f\" (which is for float).\n    There is no initialization for total_cost and final_cost before their first use in the switch cases, which may lead to undefined behavior if the switch never matches."
  },
  {
    "student_id": "20619015",
    "code": "\n/* --- 20619015_Arianna binti Ainurizam/20619015_Arianna binti Ainurizam/Q1.c --- */\n\n#include <stdio.h>\n\nint main() {\n    int row, column; \n    \n    //Prompt user to enter number of rows and columns\n    printf(\"Enter the number of rows: \");\n    scanf(\"%d\", &row);\n    printf(\"Enter the number of columns: \");\n    scanf(\"%d\", &column);\n    \n    for (int i=1; i <= row; i++) {\n        for (int j=1; j <= column; j++) {\n            printf(\" *\");\n            \n        }\n        printf(\"\\n\"); //Newline for each row\n    }\n    return 0;\n}\n/* --- 20619015_Arianna binti Ainurizam/20619015_Arianna binti Ainurizam/Q2.c --- */\n\n#include <stdio.h>\n\nint main() {\n    int num1, num2, num3;\n    int sum, product;\n    float average;\n    \n    //Prompt user to input 3 numbers\n    printf(\"Enter 3 integers separated by spaces: \");\n    scanf(\"%d %d %d\", &num1, &num2, &num3);\n    \n    //Calculate each value\n    sum = num1+num2+num3;\n    average = (float)sum/3;\n    product = num1*num2*num3;\n    \n    printf(\"Sum: %d\\n\", sum);\n    printf(\"Average: %.2f\\n\", average);\n    printf(\"Product: %d\\n\", product);\n\n    //To find smallest number\n    if (num1 <= num2 && num1 <= num3) {\n            printf(\"Smallest: %d\\n\", num1);\n        } else if (num2 <= num1 && num2 <=num3){\n            printf(\"Smallest: %d\\n\", num2);\n        } else {\n            printf(\"Smallest: %d\\n\", num3);\n        }\n    \n    //To find largest number    \n    if (num1 >= num2 && num1 >= num3) { //Check if num1 is the largest\n        printf(\"Largest: %d\\n\", num1); \n    } else if (num2 >= num1 && num2 >= num3) { //Check if num2 is the largest\n        printf(\"Largest: %d\\n\", num2);\n    } else { //Check if num3 is the largest\n        printf(\"Largest: %d\\n\", num3);\n    }\n    return 0;\n}\n/* --- 20619015_Arianna binti Ainurizam/20619015_Arianna binti Ainurizam/Q3.c --- */\n\n#include <stdio.h>\n\n\nint main() {\n    int weight, price, code, item;\n    float cost, discount, discount_cost;\n \n while (1) {\n\n    printf(\"Grocery Store!\\n\");\n    printf(\"Enter the product code:\\n 1 for Fruits\\n 2 for Vegetables\\n 3 for Dairy Products\\n 4 for Canned Goods\\n 0 to exit: \\n\");\n    scanf(\"%d\", &code);\n    \n    //Exit the program when user inputs 0 \n    if (code == 0) {\n        break;\n    } \n\n    switch (code) {\n        case 1: //fruits, when user inputs 1\n        //Prompt user to input weight, price and discount\n        printf(\"Enter the weight (in kg): \");\n        scanf(\"%d\", &weight);\n        printf(\"Enter the price (per kg): \");\n        scanf(\"%d\", &price);\n        printf(\"Enter discount percentage (or 0 for no discount): \");\n        scanf(\"%f\", &discount);\n        \n        //calculate total cost\n        cost = weight*price;\n        \n        //calculate cost after discount(if any)\n        if (discount == 0) {\n                discount_cost = cost; //Assigns cost to discount cost if there is not discount (no change)\n            } else {\n                discount_cost = cost * (100 - discount)/100;\n            }\n            \n        printf(\"The total cost of fruits: $%.2f\\n\", cost);\n        printf(\"The final cost of fruits after discount is: $%.2f\\n\\n\", discount_cost);\n        break;\n        \n        \n    \n        case 2: //vegetables\n            printf(\"Enter the weight (in kg): \");\n            scanf(\"%d\", &weight);\n            printf(\"Enter the price (per kg): \");\n            scanf(\"%d\", &price);\n            printf(\"Enter discount percentage (or 0 for no discount): \");\n            scanf(\"%f\", &discount);\n    \n            cost = weight*price;\n\n            if (discount == 0) {\n                discount_cost = cost;\n            } else {\n                discount_cost = cost * (100 - discount)/100;\n            }\n            \n            printf(\"The total cost of vegetables: $%.2f\\n\", cost);\n            printf(\"The final cost of vegetables after discount is: $%.2f\\n\\n\", discount_cost);\n            \n            break;\n            \n        case 3: //milk\n            //Price is fixed to 3.00 each\n            printf(\"Price for 1 is $3.00.\\n\");\n            printf(\"Enter number of items: \");\n            scanf(\"%d\", &item);\n            printf(\"Enter discount percentage (or 0 for no discount): \");\n            scanf(\"%f\", &discount);\n            \n            cost = item*3;\n            \n            if (discount == 0) {\n                discount_cost = cost;\n            } else {\n                discount_cost = cost * (100 - discount)/100;\n            }\n            \n            printf(\"The total cost of milk is $%.2f\\n\", cost);\n            printf(\"The final cost of milk after discount is: $%.2f\\n\\n\", discount_cost);\n            break;\n            \n        case 4: //canned goods\n            //Price is fixed to 4.00 each\n            printf(\"Price for 1 is $4.00.\\n\");\n            printf(\"Enter number of items: \");\n            scanf(\"%d\", &item);\n            printf(\"Enter discount percentage (or 0 for no discount): \");\n            scanf(\"%f\", &discount);\n            \n            cost = item*4;\n            \n            if (discount == 0) {\n                discount_cost = cost;\n            } else {\n                discount_cost = cost * (100 - discount)/100;\n            }\n            \n            printf(\"The total cost of canned goods is $%.2f\\n\", cost);\n            printf(\"The final cost of milk after discount is: $%.2f\\n\\n\", discount_cost);\n            break;\n            \n            \n        default: //If user inputs numbers other than numbers 0-4, it will say error and loop back to the menu\n            printf(\"Error. Enter a valid number.\\n\");\n            break;\n        \n        \n    }\n    \n }\n    return 0;\n}",
    "feedback": "q1:The program correctly prints a grid of asterisks based on user-defined rows and columns. The nested loops function as intended, producing the expected output.q2: The program correctly calculates the sum, average, product, smallest, and largest of three integers. The calculations and comparisons are implemented accurately. One minor suggestion for improvement is to simplify the logic for finding the smallest and largest numbers using a single set of comparisons.q3:While the code works as intended, you can improve it by reducing redundancy. Here are some suggestions:\n\n    Consolidate Cost Calculation: Create a function to handle cost calculations to avoid code duplication. This will make your code cleaner and easier to manage.\n    Use Consistent Data Types: Use float for weight and price to handle decimal values accurately.\n    Correct Output Messages: Ensure that the output messages are accurate and consistent for each case."
  },
  {
    "student_id": "20717489",
    "code": "\n/* --- 21797489_Chen HongJian/21797489_Chen HongJian/x64/21797489_Chen HongJian/q1.c --- */\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint row = 0;\r\n\tint column = 0;\r\n\tprintf(\"Please enter the number of rows:\");\r\n\tscanf_s(\"%d\", &row);\r\n\tprintf(\"Please enter the number of columns:\");\r\n\tscanf_s(\"%d\", &column);//get the number of rows and columns\r\n\t\r\n\tfor (int y = 0; y < column; y++);//form a vertical cycle\r\n\t{\r\n\t\tint x = 0;\r\n\t\twhile (x + 1 < row)// for a horizontal cycle\r\n\t\t{\r\n\t\t\tprintf(\"*\");\r\n\t\t\tx++;\r\n\t\t}\r\n\t\tprintf(\"*\\n\");//let the end of line have a newline character\r\n\t}\r\n\t\r\n\t\r\n\treturn 0;\r\n}\n/* --- 21797489_Chen HongJian/21797489_Chen HongJian/x64/21797489_Chen HongJian/q2.c --- */\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint sum = 0;\r\n\tint average = 0;\r\n\tint product = 1;\r\n\tint smallest = 0;\r\n\tint smallest_cnt = 0;\r\n\tint biggest = 0;\r\n\tint biggest_cnt = 0;\r\n\tint integer = 0;\r\n\tint count = 0;\r\n\tint i = 0;\r\n\tprintf(\"please enter how many integers you want to enter:\");\r\n\tscanf_s(\"%d\", count);\r\n\tfor (i = 0; i < count; i++)\r\n\t{\r\n\t\tprintf(\"please enter the interger separated by a single space:\");\r\n\t\tscanf_s(\"%d\", &integer[i]);//to let the user enter the integer\r\n\t}\r\n\tint p = 0;\r\n\twhile(p<count)\r\n\t{\r\n\t\ti++;\r\n\t\tsum = sum + integer;//the sum of integers\r\n\t\taverage = average + integer;//the average of integers\r\n\t\tproduct = product * integer;//the product of integers\r\n\t\tbiggest_cnt = biggest;\r\n\t\tbiggest = integer;\r\n\t\tif (biggest > biggest_cnt)\r\n\t\t\tbiggest = biggest;\r\n\t\telse biggest = biggest_cnt;//to find which integer is biggest one\r\n\t\tsmallest_cnt = smallest;\r\n\t\tsmallest = integer;\r\n\t\tif (smallest < smallest_cnt)\r\n\t\t\tsmallest_cnt = smallest;\r\n\t\telse smallest = smallest_cnt;//to find which integer is smallest one\r\n\r\n\t\t\t\r\n\t}\r\n\taverage = average / count;\r\n\tprintf(\"the sum is\", sum);\r\n\tprintf(\"the average is\", average);\r\n\tprintf(\"the product is\", product);\r\n\tprintf(\"the smallest is\", smallest);\r\n\tprintf(\"the biggest is\", biggest);\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n\t\r\n}\n/* --- 21797489_Chen HongJian/21797489_Chen HongJian/x64/21797489_Chen HongJian/q3.c --- */\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint cnt = 0;\r\n\tint quantity = 0;\r\n\tint price = 0;\r\n\tint discount = 0;\r\n\tint total = 0;\r\n\tint final = 0;\r\n\tprintf(\"Enter the product code(1 for fruits, 2 for vegetables, 3 for Dairy products, 4 for canned goods, 0 to exit):\");\r\n\tscanf_s(\"%d\", &cnt);\r\n\tif (cnt == 0)\r\n\t{\r\n\t\tprintf(\"exit!\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tswitch (cnt)\r\n\t\t{\r\n\t\tcase 1: printf(\"Enter the weight of fruits(in kg):\");\r\n\t\t\tscanf_s(\"%d\", &quantity);\r\n\t\t\tprintf(\"Enter the price per kg of fruits:\");\r\n\t\t\tscanf_s(\"%d\", &price);\r\n\t\t\tbreak;\r\n\t\tcase 2: printf(\"Enter the weight of veggies(in kg):\");\r\n\t\t\tscanf_s(\"%d\", &quantity);\r\n\t\t\tprintf(\"Enter the price per kg of veggies:\");\r\n\t\t\tscanf_s(\"%d\", &price);\r\n\t\t\tbreak;\r\n\t\tcase 3: printf(\"Enter the price of this item:\");\r\n\t\t\tscanf_s(\"%d\", &price);\r\n\t\t\tquantity = 1;\r\n\t\t\tbreak;\r\n\t\tcase 4: printf(\"Enter the quantity of canned goods:\");\r\n\t\t\tscanf_s(\"%d\", &quantity);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tprintf(\"Enter discount percentage(or 0 for no discount):\");\r\n\t\tscanf_s(\"%d\", &discount);\r\n\t\ttotal = price * quantity;\r\n\t\tfinal = total * (1 - discount * 0.01);\r\n\t\tprintf(\"The total cost is %d\\n\", total);\r\n\t\tprintf(\"The final cost after applying the discount is %d\", final);\r\n\t}\r\n\treturn 0;\r\n}",
    "feedback": "q1:The program aims to create a rectangular pattern of asterisks based on user-defined dimensions (rows and columns). However, there are issues with the implementation that prevent it from functioning as intended.q2:The program attempts to read a specified number of integers and calculate their sum, average, product, smallest, and largest values. However, there are several logical errors that prevent it from functioning correctly.\n    Input Handling: The scanf_s for count is incorrect; it should use the address-of operator (&count).\n    Array Declaration: The integer variable is not defined as an array. You need to declare it as an array to hold the integers.\n    Calculation Logic: The sum, average, product, smallest, and largest calculations are not correctly implemented:\n        You need to use the value of integer[i] when updating sum, average, product, smallest, and biggest.\n        The logic for finding the smallest and largest integers is flawed.\n    Output Statements: The printf statements do not include format specifiers, which will lead to incorrect output.q3: Use float for price, discount and cost."
  }
]